{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/graphpack/config/index.js","webpack:///./node_modules/graphpack/config/webpack.config.js","webpack:///./node_modules/graphpack/lib/server.js","webpack:///./node_modules/graphpack/lib/srcFiles.js","webpack:///../src/linkUtils.ts","webpack:///../src/link.ts","webpack:///../src/ApolloServer.ts","webpack:///../src/expressApollo.ts","webpack:///../src/index.ts","webpack:///../src/exports.ts","webpack:///../src/storeUtils.ts","webpack:///../src/directives.ts","webpack:///../src/fragments.ts","webpack:///../src/util/assign.ts","webpack:///../src/getFromAST.ts","webpack:///../src/util/filterInPlace.ts","webpack:///../src/transform.ts","webpack:///../src/util/canUse.ts","webpack:///../src/util/cloneDeep.ts","webpack:///../src/util/environment.ts","webpack:///../src/util/errorHandling.ts","webpack:///../src/util/maybeDeepFreeze.ts","webpack:///../src/util/mergeDeep.ts","webpack:///../src/util/warnOnce.ts","webpack:///../src/util/stripSymbols.ts","webpack:///../src/pubsub-async-iterator.ts","webpack:///../src/pubsub-engine.ts","webpack:///../src/pubsub.ts","webpack:///../src/with-filter.ts","webpack:///../../src/generate/SchemaError.ts","webpack:///../../src/generate/addResolveFunctionsToSchema.ts","webpack:///../../src/generate/addSchemaLevelResolveFunction.ts","webpack:///../../src/generate/assertResolveFunctionsPresent.ts","webpack:///../../src/generate/attachConnectorsToContext.ts","webpack:///../../src/generate/attachDirectiveResolvers.ts","webpack:///../../src/generate/buildSchemaFromTypeDefinitions.ts","webpack:///../../src/generate/chainResolvers.ts","webpack:///../../src/generate/checkForResolveTypeResolver.ts","webpack:///../../src/generate/concatenateTypeDefs.ts","webpack:///../../src/generate/decorateWithLogger.ts","webpack:///../../src/generate/extendResolversFromInterfaces.ts","webpack:///../../src/generate/extractExtensionDefinitions.ts","webpack:///../../src/generate/filterExtensionDefinitions.ts","webpack:///../../src/generate/forEachField.ts","webpack:///../../src/generate/index.ts","webpack:///../src/implementsAbstractType.ts","webpack:///../src/isEmptyObject.ts","webpack:///../src/isSpecifiedScalarType.ts","webpack:///../src/makeExecutableSchema.ts","webpack:///../src/mergeDeep.ts","webpack:///../src/mock.ts","webpack:///../src/schemaVisitor.ts","webpack:///../../src/stitching/defaultMergedResolver.ts","webpack:///../../src/stitching/delegateToSchema.ts","webpack:///../../src/stitching/errors.ts","webpack:///../../src/stitching/getResponseKeyFromInfo.ts","webpack:///../../src/stitching/index.ts","webpack:///../../src/stitching/introspectSchema.ts","webpack:///../../src/stitching/linkToFetcher.ts","webpack:///../../src/stitching/makeRemoteExecutableSchema.ts","webpack:///../../src/stitching/mapAsyncIterator.ts","webpack:///../../src/stitching/mergeSchemas.ts","webpack:///../../src/stitching/observableToAsyncIterable.ts","webpack:///../../src/stitching/resolveFromParentTypename.ts","webpack:///../../src/stitching/resolvers.ts","webpack:///../../src/stitching/schemaRecreation.ts","webpack:///../../src/stitching/typeFromAST.ts","webpack:///../../src/transforms/AddArgumentsAsVariables.ts","webpack:///../../src/transforms/AddTypenameToAbstract.ts","webpack:///../../src/transforms/CheckResultAndHandleErrors.ts","webpack:///../../src/transforms/ConvertEnumResponse.ts","webpack:///../../src/transforms/ConvertEnumValues.ts","webpack:///../../src/transforms/ExpandAbstractTypes.ts","webpack:///../../src/transforms/ExtractField.ts","webpack:///../../src/transforms/FilterRootFields.ts","webpack:///../../src/transforms/FilterToSchema.ts","webpack:///../../src/transforms/FilterTypes.ts","webpack:///../../src/transforms/RenameRootFields.ts","webpack:///../../src/transforms/RenameTypes.ts","webpack:///../../src/transforms/ReplaceFieldWithFragment.ts","webpack:///../../src/transforms/TransformRootFields.ts","webpack:///../../src/transforms/WrapQuery.ts","webpack:///../../src/transforms/index.ts","webpack:///../../src/transforms/transformSchema.ts","webpack:///../../src/transforms/transforms.ts","webpack:///../../src/transforms/visitSchema.ts","webpack:///./src sync ^\\.\\/(context|context\\/index)\\.(js|ts)$","webpack:///./src sync ^\\.\\/(resolvers|resolvers\\/index)\\.(js|ts)$","webpack:///./src sync ^\\.\\/(schema|schema\\/index)\\.(gql|graphql|js|ts)$","webpack:///./src/resolvers.js","webpack:///external \"@apollographql/graphql-playground-html\"","webpack:///external \"@wry/equality\"","webpack:///external \"accepts\"","webpack:///external \"apollo-server-core\"","webpack:///external \"babel-loader\"","webpack:///external \"babel-preset-graphpack\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"cosmiconfig\"","webpack:///external \"deprecated-decorator\"","webpack:///external \"events\"","webpack:///external \"express\"","webpack:///external \"fast-json-stable-stringify\"","webpack:///external \"friendly-errors-webpack-plugin\"","webpack:///external \"fs\"","webpack:///external \"graphql\"","webpack:///external \"graphql/error\"","webpack:///external \"graphql/execution/values\"","webpack:///external \"graphql/language/visitor\"","webpack:///external \"graphql/utilities\"","webpack:///external \"http\"","webpack:///external \"iterall\"","webpack:///external \"path\"","webpack:///external \"ts-invariant\"","webpack:///external \"tslib\"","webpack:///external \"type-is\"","webpack:///external \"url\"","webpack:///external \"uuid\"","webpack:///external \"webpack\"","webpack:///external \"webpack-node-externals\"","webpack:///external \"zen-observable-ts\""],"names":["cosmiconfig","require","webpack","defaultConfig","explorer","search","loadServerConfig","result","userConfig","config","mode","port","Number","process","env","PORT","server","loadWebpackConfig","exports","FriendlyErrorsWebpackPlugin","fs","path","nodeExternals","isDev","isWebpack","__webpack_modules__","hasBabelRc","existsSync","resolve","console","info","module","devtool","entry","index","externals","whitelist","rules","test","use","loader","options","babelrc","cacheDirectory","presets","undefined","type","node","__filename","__dirname","optimization","noEmitOnErrors","output","filename","libraryTarget","join","cwd","sourceMapFilename","performance","hints","plugins","optimize","LimitChunkCountPlugin","maxChunks","EnvironmentPlugin","DEBUG","GRAPHPACK_SRC_DIR","NODE_ENV","clearConsole","extensions","stats","target","resolvers","Object","keys","length","Error","createServer","applyMiddleware","serverPort","app","listen","ApolloExpressServer","log","graphqlPath","ApolloServer","then","url","startServer","context","typeDefs","importFirst","req","map","mod","default","Query","hello"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const cosmiconfig = require('cosmiconfig');\nconst webpack = require('webpack');\nconst defaultConfig = require('./webpack.config');\n\nconst explorer = cosmiconfig('graphpack').search();\n\nconst loadServerConfig = async () => {\n  const result = await explorer;\n  const userConfig = result\n    ? typeof result.config === 'function'\n      ? result.config(defaultConfig.mode)\n      : result.config\n    : {};\n\n  return { port: Number(process.env.PORT), ...userConfig.server };\n};\n\nconst loadWebpackConfig = async () => {\n  const result = await explorer;\n  const userConfig = result\n    ? typeof result.config === 'function'\n      ? result.config(defaultConfig.mode)\n      : result.config\n    : {};\n\n  if (typeof userConfig.webpack === 'function') {\n    return userConfig.webpack({ config: defaultConfig, webpack });\n  }\n\n  return { ...defaultConfig, ...userConfig.webpack };\n};\n\nexports.loadServerConfig = loadServerConfig;\nexports.loadWebpackConfig = loadWebpackConfig;\n","const FriendlyErrorsWebpackPlugin = require('friendly-errors-webpack-plugin');\nconst fs = require('fs');\nconst path = require('path');\nconst webpack = require('webpack');\nconst nodeExternals = require('webpack-node-externals');\n\nconst isDev = process.env.NODE_ENV !== 'production';\nconst isWebpack = typeof __webpack_modules__ === 'object';\nconst hasBabelRc = fs.existsSync(path.resolve('babel.config.js'));\n\nif (hasBabelRc && !isWebpack) {\n  console.info('🐠 Using babel.config.js defined in your app root');\n}\n\nmodule.exports = {\n  devtool: 'source-map',\n  entry: {\n    // We take care of setting up entry file under lib/index.js\n    index: ['graphpack'],\n  },\n  // When bundling with Webpack for the backend you usually don't want to bundle\n  // its node_modules dependencies. This creates an externals function that\n  // ignores node_modules when bundling in Webpack.\n  externals: [nodeExternals({ whitelist: [/^graphpack$/] })],\n  mode: isDev ? 'development' : 'production',\n  module: {\n    rules: [\n      {\n        test: /\\.(gql|graphql)/,\n        use: 'graphql-tag/loader',\n      },\n      {\n        test: /\\.(js|ts)$/,\n        use: [\n          {\n            loader: require.resolve('babel-loader'),\n            options: {\n              babelrc: true,\n              cacheDirectory: true,\n              presets: hasBabelRc\n                ? undefined\n                : [require.resolve('babel-preset-graphpack')],\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.mjs$/,\n        type: 'javascript/auto',\n      },\n    ],\n  },\n  node: {\n    __filename: true,\n    __dirname: true,\n  },\n  optimization: { noEmitOnErrors: true },\n  output: {\n    filename: '[name].js',\n    libraryTarget: 'commonjs2',\n    path: path.join(process.cwd(), './build'),\n    sourceMapFilename: '[name].map',\n  },\n  performance: {\n    hints: false,\n  },\n  plugins: [\n    new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 }),\n    new webpack.EnvironmentPlugin({\n      DEBUG: false,\n      GRAPHPACK_SRC_DIR: path.resolve(process.cwd(), 'src'),\n      NODE_ENV: 'development',\n    }),\n    new FriendlyErrorsWebpackPlugin({ clearConsole: isDev }),\n  ],\n  resolve: {\n    extensions: ['.ts', '.js'],\n  },\n  stats: 'minimal',\n  target: 'node',\n};\n","import { ApolloServer } from 'apollo-server';\nimport { ApolloServer as ApolloExpressServer } from 'apollo-server-express';\nimport { context, resolvers, typeDefs } from './srcFiles';\nimport { loadServerConfig } from '../config';\n\nif (!(resolvers && Object.keys(resolvers).length > 0)) {\n  throw Error(\n    `Couldn't find any resolvers. Please add resolvers to your src/resolvers.js`,\n  );\n}\n\nconst createServer = config => {\n  const { applyMiddleware, port: serverPort, ...options } = config;\n  const port = Number(process.env.PORT) || serverPort || 4000;\n  // Pull out fields that are not relevant for the apollo server\n\n  // Use apollo-server-express when middleware detected\n  if (\n    applyMiddleware &&\n    applyMiddleware.app &&\n    typeof applyMiddleware.app.listen === 'function'\n  ) {\n    const server = new ApolloExpressServer(options);\n    server.applyMiddleware(applyMiddleware);\n\n    return applyMiddleware.app.listen({ port }, () =>\n      console.log(\n        `🚀 Server ready at http://localhost:${port}${server.graphqlPath}`,\n      ),\n    );\n  }\n\n  // Use apollo-server\n  const server = new ApolloServer(options);\n\n  return server\n    .listen({ port })\n    .then(({ url }) => console.log(`🚀 Server ready at ${url}`));\n};\n\nconst startServer = async () => {\n  // Load server config from graphpack.config.js\n  const config = await loadServerConfig();\n\n  createServer({ ...config, context, resolvers, typeDefs });\n};\n\nstartServer();\n","export const importFirst = req =>\n  req.keys().map(mod => req(mod).default || req(mod))[0];\n\n// Optionally import modules\nexport const context = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(context|context\\/index)\\.(js|ts)$/,\n  ),\n);\nexport const resolvers = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(resolvers|resolvers\\/index)\\.(js|ts)$/,\n  ),\n);\nexport const typeDefs = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(schema|schema\\/index)\\.(gql|graphql|js|ts)$/,\n  ),\n);\n","import Observable from 'zen-observable-ts';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX We're assuming here that query and variables will be serialized in\n  // the same order, which might not always be true.\n  const { query, variables, operationName } = operation;\n  return JSON.stringify([operationName, query, variables]);\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cors_1 = __importDefault(require(\"cors\"));\nconst body_parser_1 = require(\"body-parser\");\nconst graphql_playground_html_1 = require(\"@apollographql/graphql-playground-html\");\nconst apollo_server_core_1 = require(\"apollo-server-core\");\nconst accepts_1 = __importDefault(require(\"accepts\"));\nconst type_is_1 = __importDefault(require(\"type-is\"));\nconst expressApollo_1 = require(\"./expressApollo\");\nvar apollo_server_core_2 = require(\"apollo-server-core\");\nexports.GraphQLExtension = apollo_server_core_2.GraphQLExtension;\nconst fileUploadMiddleware = (uploadsConfig, server) => (req, res, next) => {\n    if (typeof apollo_server_core_1.processFileUploads === 'function' &&\n        type_is_1.default(req, ['multipart/form-data'])) {\n        apollo_server_core_1.processFileUploads(req, res, uploadsConfig)\n            .then(body => {\n            req.body = body;\n            next();\n        })\n            .catch(error => {\n            if (error.status && error.expose)\n                res.status(error.status);\n            next(apollo_server_core_1.formatApolloErrors([error], {\n                formatter: server.requestOptions.formatError,\n                debug: server.requestOptions.debug,\n            }));\n        });\n    }\n    else {\n        next();\n    }\n};\nclass ApolloServer extends apollo_server_core_1.ApolloServerBase {\n    constructor(config) {\n        super(config);\n    }\n    createGraphQLServerOptions(req, res) {\n        const _super = Object.create(null, {\n            graphQLServerOptions: { get: () => super.graphQLServerOptions }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.graphQLServerOptions.call(this, { req, res });\n        });\n    }\n    supportsSubscriptions() {\n        return true;\n    }\n    supportsUploads() {\n        return true;\n    }\n    applyMiddleware({ app, path, cors, bodyParserConfig, disableHealthCheck, onHealthCheck, }) {\n        if (!path)\n            path = '/graphql';\n        const promiseWillStart = this.willStart();\n        app.use(path, (_req, _res, next) => {\n            promiseWillStart.then(() => next()).catch(next);\n        });\n        if (!disableHealthCheck) {\n            app.use('/.well-known/apollo/server-health', (req, res) => {\n                res.type('application/health+json');\n                if (onHealthCheck) {\n                    onHealthCheck(req)\n                        .then(() => {\n                        res.json({ status: 'pass' });\n                    })\n                        .catch(() => {\n                        res.status(503).json({ status: 'fail' });\n                    });\n                }\n                else {\n                    res.json({ status: 'pass' });\n                }\n            });\n        }\n        let uploadsMiddleware;\n        if (this.uploadsConfig && typeof apollo_server_core_1.processFileUploads === 'function') {\n            uploadsMiddleware = fileUploadMiddleware(this.uploadsConfig, this);\n        }\n        this.graphqlPath = path;\n        if (cors === true) {\n            app.use(path, cors_1.default());\n        }\n        else if (cors !== false) {\n            app.use(path, cors_1.default(cors));\n        }\n        if (bodyParserConfig === true) {\n            app.use(path, body_parser_1.json());\n        }\n        else if (bodyParserConfig !== false) {\n            app.use(path, body_parser_1.json(bodyParserConfig));\n        }\n        if (uploadsMiddleware) {\n            app.use(path, uploadsMiddleware);\n        }\n        app.use(path, (req, res, next) => {\n            if (this.playgroundOptions && req.method === 'GET') {\n                const accept = accepts_1.default(req);\n                const types = accept.types();\n                const prefersHTML = types.find((x) => x === 'text/html' || x === 'application/json') === 'text/html';\n                if (prefersHTML) {\n                    const playgroundRenderPageOptions = Object.assign({ endpoint: path, subscriptionEndpoint: this.subscriptionsPath }, this.playgroundOptions);\n                    res.setHeader('Content-Type', 'text/html');\n                    const playground = graphql_playground_html_1.renderPlaygroundPage(playgroundRenderPageOptions);\n                    res.write(playground);\n                    res.end();\n                    return;\n                }\n            }\n            return expressApollo_1.graphqlExpress(() => {\n                return this.createGraphQLServerOptions(req, res);\n            })(req, res, next);\n        });\n    }\n}\nexports.ApolloServer = ApolloServer;\nexports.registerServer = () => {\n    throw new Error('Please use server.applyMiddleware instead of registerServer. This warning will be removed in the next release');\n};\n//# sourceMappingURL=ApolloServer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst apollo_server_core_1 = require(\"apollo-server-core\");\nfunction graphqlExpress(options) {\n    if (!options) {\n        throw new Error('Apollo Server requires options.');\n    }\n    if (arguments.length > 1) {\n        throw new Error(`Apollo Server expects exactly one argument, got ${arguments.length}`);\n    }\n    return (req, res, next) => {\n        apollo_server_core_1.runHttpQuery([req, res], {\n            method: req.method,\n            options: options,\n            query: req.method === 'POST' ? req.body : req.query,\n            request: apollo_server_core_1.convertNodeHttpToRequest(req),\n        }).then(({ graphqlResponse, responseInit }) => {\n            if (responseInit.headers) {\n                for (const [name, value] of Object.entries(responseInit.headers)) {\n                    res.setHeader(name, value);\n                }\n            }\n            res.write(graphqlResponse);\n            res.end();\n        }, (error) => {\n            if ('HttpQueryError' !== error.name) {\n                return next(error);\n            }\n            if (error.headers) {\n                for (const [name, value] of Object.entries(error.headers)) {\n                    res.setHeader(name, value);\n                }\n            }\n            res.statusCode = error.statusCode;\n            res.write(error.message);\n            res.end();\n        });\n    };\n}\nexports.graphqlExpress = graphqlExpress;\n//# sourceMappingURL=expressApollo.js.map","function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./makeExecutableSchema\"));\n__export(require(\"./mock\"));\n__export(require(\"./stitching\"));\n__export(require(\"./transforms\"));\nvar schemaVisitor_1 = require(\"./schemaVisitor\");\nexports.SchemaDirectiveVisitor = schemaVisitor_1.SchemaDirectiveVisitor;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"graphql-tools\"));\n__export(require(\"graphql-subscriptions\"));\nvar apollo_server_core_1 = require(\"apollo-server-core\");\nexports.gql = apollo_server_core_1.gql;\nexports.GraphQLUpload = apollo_server_core_1.GraphQLUpload;\nexports.GraphQLExtension = apollo_server_core_1.GraphQLExtension;\nexports.ApolloError = apollo_server_core_1.ApolloError;\nexports.toApolloError = apollo_server_core_1.toApolloError;\nexports.SyntaxError = apollo_server_core_1.SyntaxError;\nexports.ValidationError = apollo_server_core_1.ValidationError;\nexports.AuthenticationError = apollo_server_core_1.AuthenticationError;\nexports.ForbiddenError = apollo_server_core_1.ForbiddenError;\nexports.UserInputError = apollo_server_core_1.UserInputError;\nexports.defaultPlaygroundOptions = apollo_server_core_1.defaultPlaygroundOptions;\n//# sourceMappingURL=exports.js.map","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject &&\n    (idObject as IdValue | JsonValue).type === 'id' &&\n    typeof (idObject as IdValue).generated === 'boolean';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new InvariantError(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  FieldNode,\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n} from 'graphql';\n\nimport { visit } from 'graphql/language/visitor';\n\nimport { invariant } from 'ts-invariant';\n\nimport { argumentsObjectFromField } from './storeUtils';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function getDirectiveInfoFromField(\n  field: FieldNode,\n  variables: Object,\n): DirectiveInfo {\n  if (field.directives && field.directives.length) {\n    const directiveObj: DirectiveInfo = {};\n    field.directives.forEach((directive: DirectiveNode) => {\n      directiveObj[directive.name.value] = argumentsObjectFromField(\n        directive,\n        variables,\n      );\n    });\n    return directiveObj;\n  }\n  return null;\n}\n\nexport function shouldInclude(\n  selection: SelectionNode,\n  variables: { [name: string]: any } = {},\n): boolean {\n  return getInclusionDirectives(\n    selection.directives,\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(doc: DocumentNode) {\n  const names: string[] = [];\n\n  visit(doc, {\n    Directive(node) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], doc: DocumentNode) {\n  return getDirectiveNames(doc).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  return directives ? directives.filter(isInclusionDirective).map(directive => {\n    const directiveArguments = directive.arguments;\n    const directiveName = directive.name.value;\n\n    invariant(\n      directiveArguments && directiveArguments.length === 1,\n      `Incorrect number of arguments for the @${directiveName} directive.`,\n    );\n\n    const ifArgument = directiveArguments[0];\n    invariant(\n      ifArgument.name && ifArgument.name.value === 'if',\n      `Invalid argument for the @${directiveName} directive.`,\n    );\n\n    const ifValue: ValueNode = ifArgument.value;\n\n    // means it has to be a variable value if this is a valid @skip or @include directive\n    invariant(\n      ifValue &&\n        (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n      `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n    );\n\n    return { directive, ifArgument };\n  }) : [];\n}\n\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n","/**\n * Adds the properties of one or more source objects to a target object. Works exactly like\n * `Object.assign`, but as a utility to maintain support for IE 11.\n *\n * @see https://github.com/apollostack/apollo-client/pull/1009\n */\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n): A & B & C & D & E;\nexport function assign(target: any, ...sources: Array<any>): any;\nexport function assign(\n  target: { [key: string]: any },\n  ...sources: Array<{ [key: string]: any }>\n): { [key: string]: any } {\n  sources.forEach(source => {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(key => {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  invariant(mutationDef, 'Must contain a mutation definition.');\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  invariant(def, `GraphQL document is missing an operation`);\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n} from 'graphql';\nimport { visit } from 'graphql/language/visitor';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from './util/filterInPlace';\nimport { invariant } from 'ts-invariant';\nimport { isField, isInlineFragment } from './storeUtils';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll fist check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // docuemnt.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  return (\n    selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  checkDocument(doc);\n\n  let parentPath: string;\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      SelectionSet: {\n        enter(node, _key, _parent, path) {\n          const currentPath = path.join('-');\n\n          if (\n            !parentPath ||\n            currentPath === parentPath ||\n            !currentPath.startsWith(parentPath)\n          ) {\n            if (node.selections) {\n              const selectionsWithDirectives = node.selections.filter(\n                selection => hasDirectivesInSelection(directives, selection),\n              );\n\n              if (hasDirectivesInSelectionSet(directives, node, false)) {\n                parentPath = currentPath;\n              }\n\n              return {\n                ...node,\n                selections: selectionsWithDirectives,\n              };\n            } else {\n              return null;\n            }\n          }\n        },\n      },\n    }),\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ),\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            node.arguments.forEach(arg => {\n              if (argMatcher(arg)) {\n                argMatchCount += 1;\n              }\n            });\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper<T>(val: T, seen: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","import { isDevelopment, isTest } from './environment';\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o: any) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n\nexport function maybeDeepFreeze(obj: any) {\n  if (isDevelopment() || isTest()) {\n    // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n    // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n    const symbolIsPolyfilled =\n      typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\n","const { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || {} as T;\n  const count = sources.length;\n  if (count > 1) {\n    const pastCopies: any[] = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (let i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\n\nfunction isObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(\n  target: any,\n  source: any,\n  pastCopies: any[],\n) {\n  if (isObject(source) && isObject(target)) {\n    // In case the target has been frozen, make an extensible copy so that\n    // we can merge properties into the copy.\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(sourceKey => {\n      const sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        const targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          // When there is a key collision, we need to make a shallow copy of\n          // target[sourceKey] so the merge does not modify any source objects.\n          // To avoid making unnecessary copies, we use a simple array to track\n          // past copies, since it's safe to modify copies created earlier in\n          // the merge. We use an array for pastCopies instead of a Map or Set,\n          // since the number of copies should be relatively small, and some\n          // Map/Set polyfills modify their keys.\n          target[sourceKey] = mergeHelper(\n            shallowCopyForMerge(targetValue, pastCopies),\n            sourceValue,\n            pastCopies,\n          );\n        }\n      } else {\n        // If there is no collision, the target can safely share memory with\n        // the source, and the recursion can terminate here.\n        target[sourceKey] = sourceValue;\n      }\n    });\n\n    return target;\n  }\n\n  // If source (or target) is not an object, let source replace target.\n  return source;\n}\n\nfunction shallowCopyForMerge<T>(value: T, pastCopies: any[]): T {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    pastCopies.indexOf(value) < 0\n  ) {\n    if (Array.isArray(value)) {\n      value = (value as any).slice(0);\n    } else {\n      value = {\n        __proto__: Object.getPrototypeOf(value),\n        ...value,\n      };\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n","/**\n * In order to make assertions easier, this function strips `symbol`'s from\n * the incoming data.\n *\n * This can be handy when running tests against `apollo-client` for example,\n * since it adds `symbol`'s to the data in the store. Jest's `toEqual`\n * function now covers `symbol`'s (https://github.com/facebook/jest/pull/3437),\n * which means all test data used in a `toEqual` comparison would also have to\n * include `symbol`'s, to pass. By stripping `symbol`'s from the cache data\n * we can compare against more simplified test data.\n */\nexport function stripSymbols<T>(data: T): T {\n  return JSON.parse(JSON.stringify(data));\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PubSubAsyncIterator = void 0;\nvar iterall_1 = require(\"iterall\");\nvar PubSubAsyncIterator = (function () {\n    function PubSubAsyncIterator(pubsub, eventNames) {\n        this.pubsub = pubsub;\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.running = true;\n        this.allSubscribed = null;\n        this.eventsArray = typeof eventNames === 'string' ? [eventNames] : eventNames;\n    }\n    PubSubAsyncIterator.prototype.next = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.allSubscribed) return [3, 2];\n                        return [4, (this.allSubscribed = this.subscribeAll())];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2, this.pullValue()];\n                }\n            });\n        });\n    };\n    PubSubAsyncIterator.prototype.return = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.emptyQueue()];\n                    case 1:\n                        _a.sent();\n                        return [2, { value: undefined, done: true }];\n                }\n            });\n        });\n    };\n    PubSubAsyncIterator.prototype.throw = function (error) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.emptyQueue()];\n                    case 1:\n                        _a.sent();\n                        return [2, Promise.reject(error)];\n                }\n            });\n        });\n    };\n    PubSubAsyncIterator.prototype[iterall_1.$$asyncIterator] = function () {\n        return this;\n    };\n    PubSubAsyncIterator.prototype.pushValue = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, this.allSubscribed];\n                    case 1:\n                        _a.sent();\n                        if (this.pullQueue.length !== 0) {\n                            this.pullQueue.shift()(this.running\n                                ? { value: event, done: false }\n                                : { value: undefined, done: true });\n                        }\n                        else {\n                            this.pushQueue.push(event);\n                        }\n                        return [2];\n                }\n            });\n        });\n    };\n    PubSubAsyncIterator.prototype.pullValue = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.pushQueue.length !== 0) {\n                resolve(_this.running\n                    ? { value: _this.pushQueue.shift(), done: false }\n                    : { value: undefined, done: true });\n            }\n            else {\n                _this.pullQueue.push(resolve);\n            }\n        });\n    };\n    PubSubAsyncIterator.prototype.emptyQueue = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var subscriptionIds;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.running) return [3, 2];\n                        this.running = false;\n                        this.pullQueue.forEach(function (resolve) { return resolve({ value: undefined, done: true }); });\n                        this.pullQueue.length = 0;\n                        this.pushQueue.length = 0;\n                        return [4, this.allSubscribed];\n                    case 1:\n                        subscriptionIds = _a.sent();\n                        if (subscriptionIds) {\n                            this.unsubscribeAll(subscriptionIds);\n                        }\n                        _a.label = 2;\n                    case 2: return [2];\n                }\n            });\n        });\n    };\n    PubSubAsyncIterator.prototype.subscribeAll = function () {\n        var _this = this;\n        return Promise.all(this.eventsArray.map(function (eventName) { return _this.pubsub.subscribe(eventName, _this.pushValue.bind(_this), {}); }));\n    };\n    PubSubAsyncIterator.prototype.unsubscribeAll = function (subscriptionIds) {\n        for (var _i = 0, subscriptionIds_1 = subscriptionIds; _i < subscriptionIds_1.length; _i++) {\n            var subscriptionId = subscriptionIds_1[_i];\n            this.pubsub.unsubscribe(subscriptionId);\n        }\n    };\n    return PubSubAsyncIterator;\n}());\nexports.PubSubAsyncIterator = PubSubAsyncIterator;\n//# sourceMappingURL=pubsub-async-iterator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PubSubEngine = void 0;\nvar pubsub_async_iterator_1 = require(\"./pubsub-async-iterator\");\nvar PubSubEngine = (function () {\n    function PubSubEngine() {\n    }\n    PubSubEngine.prototype.asyncIterator = function (triggers) {\n        return new pubsub_async_iterator_1.PubSubAsyncIterator(this, triggers);\n    };\n    return PubSubEngine;\n}());\nexports.PubSubEngine = PubSubEngine;\n//# sourceMappingURL=pubsub-engine.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PubSub = void 0;\nvar events_1 = require(\"events\");\nvar pubsub_engine_1 = require(\"./pubsub-engine\");\nvar PubSub = (function (_super) {\n    __extends(PubSub, _super);\n    function PubSub(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.ee = options.eventEmitter || new events_1.EventEmitter();\n        _this.subscriptions = {};\n        _this.subIdCounter = 0;\n        return _this;\n    }\n    PubSub.prototype.publish = function (triggerName, payload) {\n        this.ee.emit(triggerName, payload);\n        return Promise.resolve();\n    };\n    PubSub.prototype.subscribe = function (triggerName, onMessage) {\n        this.ee.addListener(triggerName, onMessage);\n        this.subIdCounter = this.subIdCounter + 1;\n        this.subscriptions[this.subIdCounter] = [triggerName, onMessage];\n        return Promise.resolve(this.subIdCounter);\n    };\n    PubSub.prototype.unsubscribe = function (subId) {\n        var _a = this.subscriptions[subId], triggerName = _a[0], onMessage = _a[1];\n        delete this.subscriptions[subId];\n        this.ee.removeListener(triggerName, onMessage);\n    };\n    return PubSub;\n}(pubsub_engine_1.PubSubEngine));\nexports.PubSub = PubSub;\n//# sourceMappingURL=pubsub.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withFilter = void 0;\nvar iterall_1 = require(\"iterall\");\nexports.withFilter = function (asyncIteratorFn, filterFn) {\n    return function (rootValue, args, context, info) {\n        var _a;\n        var asyncIterator = asyncIteratorFn(rootValue, args, context, info);\n        var getNextPromise = function () {\n            return new Promise(function (resolve, reject) {\n                var inner = function () {\n                    asyncIterator\n                        .next()\n                        .then(function (payload) {\n                        if (payload.done === true) {\n                            resolve(payload);\n                            return;\n                        }\n                        Promise.resolve(filterFn(payload.value, args, context, info))\n                            .catch(function () { return false; })\n                            .then(function (filterResult) {\n                            if (filterResult === true) {\n                                resolve(payload);\n                                return;\n                            }\n                            inner();\n                            return;\n                        });\n                    })\n                        .catch(function (err) {\n                        reject(err);\n                        return;\n                    });\n                };\n                inner();\n            });\n        };\n        var asyncIterator2 = (_a = {\n                next: function () {\n                    return getNextPromise();\n                },\n                return: function () {\n                    return asyncIterator.return();\n                },\n                throw: function (error) {\n                    return asyncIterator.throw(error);\n                }\n            },\n            _a[iterall_1.$$asyncIterator] = function () {\n                return this;\n            },\n            _a);\n        return asyncIterator2;\n    };\n};\n//# sourceMappingURL=with-filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @schemaDefinition: A GraphQL type schema in shorthand\n// @resolvers: Definitions for resolvers to be merged with schema\nvar SchemaError = /** @class */ (function (_super) {\n    __extends(SchemaError, _super);\n    function SchemaError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        Error.captureStackTrace(_this, _this.constructor);\n        return _this;\n    }\n    return SchemaError;\n}(Error));\nexports.default = SchemaError;\n//# sourceMappingURL=SchemaError.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar graphql_1 = require(\"graphql\");\nvar transforms_1 = require(\"../transforms/transforms\");\nvar _2 = require(\".\");\nvar ConvertEnumValues_1 = require(\"../transforms/ConvertEnumValues\");\nfunction addResolveFunctionsToSchema(options, legacyInputResolvers, legacyInputValidationOptions) {\n    if (options instanceof graphql_1.GraphQLSchema) {\n        console.warn('The addResolveFunctionsToSchema function takes named options now; see IAddResolveFunctionsToSchemaOptions');\n        options = {\n            schema: options,\n            resolvers: legacyInputResolvers,\n            resolverValidationOptions: legacyInputValidationOptions,\n        };\n    }\n    var schema = options.schema, inputResolvers = options.resolvers, _a = options.resolverValidationOptions, resolverValidationOptions = _a === void 0 ? {} : _a, _b = options.inheritResolversFromInterfaces, inheritResolversFromInterfaces = _b === void 0 ? false : _b;\n    var _c = resolverValidationOptions.allowResolversNotInSchema, allowResolversNotInSchema = _c === void 0 ? false : _c, requireResolversForResolveType = resolverValidationOptions.requireResolversForResolveType;\n    var resolvers = inheritResolversFromInterfaces\n        ? _2.extendResolversFromInterfaces(schema, inputResolvers)\n        : inputResolvers;\n    // Used to map the external value of an enum to its internal value, when\n    // that internal value is provided by a resolver.\n    var enumValueMap = Object.create(null);\n    Object.keys(resolvers).forEach(function (typeName) {\n        var resolverValue = resolvers[typeName];\n        var resolverType = typeof resolverValue;\n        if (resolverType !== 'object' && resolverType !== 'function') {\n            throw new _1.SchemaError(\"\\\"\" + typeName + \"\\\" defined in resolvers, but has invalid value \\\"\" + resolverValue + \"\\\". A resolver's value \" +\n                \"must be of type object or function.\");\n        }\n        var type = schema.getType(typeName);\n        if (!type && typeName !== '__schema') {\n            if (allowResolversNotInSchema) {\n                return;\n            }\n            throw new _1.SchemaError(\"\\\"\" + typeName + \"\\\" defined in resolvers, but not in schema\");\n        }\n        Object.keys(resolverValue).forEach(function (fieldName) {\n            if (fieldName.startsWith('__')) {\n                // this is for isTypeOf and resolveType and all the other stuff.\n                type[fieldName.substring(2)] = resolverValue[fieldName];\n                return;\n            }\n            if (type instanceof graphql_1.GraphQLScalarType) {\n                type[fieldName] = resolverValue[fieldName];\n                return;\n            }\n            if (type instanceof graphql_1.GraphQLEnumType) {\n                if (!type.getValue(fieldName)) {\n                    if (allowResolversNotInSchema) {\n                        return;\n                    }\n                    throw new _1.SchemaError(typeName + \".\" + fieldName + \" was defined in resolvers, but enum is not in schema\");\n                }\n                // We've encountered an enum resolver that is being used to provide an\n                // internal enum value.\n                // Reference: https://www.apollographql.com/docs/graphql-tools/scalars.html#internal-values\n                //\n                // We're storing a map of the current enums external facing value to\n                // its resolver provided internal value. This map is used to transform\n                // the current schema to a new schema that includes enums with the new\n                // internal value.\n                enumValueMap[type.name] = enumValueMap[type.name] || {};\n                enumValueMap[type.name][fieldName] = resolverValue[fieldName];\n                return;\n            }\n            // object type\n            var fields = getFieldsForType(type);\n            if (!fields) {\n                if (allowResolversNotInSchema) {\n                    return;\n                }\n                throw new _1.SchemaError(typeName + \" was defined in resolvers, but it's not an object\");\n            }\n            if (!fields[fieldName]) {\n                if (allowResolversNotInSchema) {\n                    return;\n                }\n                throw new _1.SchemaError(typeName + \".\" + fieldName + \" defined in resolvers, but not in schema\");\n            }\n            var field = fields[fieldName];\n            var fieldResolve = resolverValue[fieldName];\n            if (typeof fieldResolve === 'function') {\n                // for convenience. Allows shorter syntax in resolver definition file\n                setFieldProperties(field, { resolve: fieldResolve });\n            }\n            else {\n                if (typeof fieldResolve !== 'object') {\n                    throw new _1.SchemaError(\"Resolver \" + typeName + \".\" + fieldName + \" must be object or function\");\n                }\n                setFieldProperties(field, fieldResolve);\n            }\n        });\n    });\n    _2.checkForResolveTypeResolver(schema, requireResolversForResolveType);\n    // If there are any enum resolver functions (that are used to return\n    // internal enum values), create a new schema that includes enums with the\n    // new internal facing values.\n    var updatedSchema = transforms_1.applySchemaTransforms(schema, [\n        new ConvertEnumValues_1.default(enumValueMap),\n    ]);\n    return updatedSchema;\n}\nfunction getFieldsForType(type) {\n    if (type instanceof graphql_1.GraphQLObjectType ||\n        type instanceof graphql_1.GraphQLInterfaceType) {\n        return type.getFields();\n    }\n    else {\n        return undefined;\n    }\n}\nfunction setFieldProperties(field, propertiesObj) {\n    Object.keys(propertiesObj).forEach(function (propertyName) {\n        field[propertyName] = propertiesObj[propertyName];\n    });\n}\nexports.default = addResolveFunctionsToSchema;\n//# sourceMappingURL=addResolveFunctionsToSchema.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\n// wraps all resolve functions of query, mutation or subscription fields\n// with the provided function to simulate a root schema level resolve funciton\nfunction addSchemaLevelResolveFunction(schema, fn) {\n    // TODO test that schema is a schema, fn is a function\n    var rootTypes = [\n        schema.getQueryType(),\n        schema.getMutationType(),\n        schema.getSubscriptionType(),\n    ].filter(function (x) { return !!x; });\n    rootTypes.forEach(function (type) {\n        // XXX this should run at most once per request to simulate a true root resolver\n        // for graphql-js this is an approximation that works with queries but not mutations\n        var rootResolveFn = runAtMostOncePerRequest(fn);\n        var fields = type.getFields();\n        Object.keys(fields).forEach(function (fieldName) {\n            // XXX if the type is a subscription, a same query AST will be ran multiple times so we\n            // deactivate here the runOnce if it's a subscription. This may not be optimal though...\n            if (type === schema.getSubscriptionType()) {\n                fields[fieldName].resolve = wrapResolver(fields[fieldName].resolve, fn);\n            }\n            else {\n                fields[fieldName].resolve = wrapResolver(fields[fieldName].resolve, rootResolveFn);\n            }\n        });\n    });\n}\n// XXX badly named function. this doesn't really wrap, it just chains resolvers...\nfunction wrapResolver(innerResolver, outerResolver) {\n    return function (obj, args, ctx, info) {\n        return Promise.resolve(outerResolver(obj, args, ctx, info)).then(function (root) {\n            if (innerResolver) {\n                return innerResolver(root, args, ctx, info);\n            }\n            return graphql_1.defaultFieldResolver(root, args, ctx, info);\n        });\n    };\n}\n// XXX this function only works for resolvers\n// XXX very hacky way to remember if the function\n// already ran for this request. This will only work\n// if people don't actually cache the operation.\n// if they do cache the operation, they will have to\n// manually remove the __runAtMostOnce before every request.\nfunction runAtMostOncePerRequest(fn) {\n    var value;\n    var randomNumber = Math.random();\n    return function (root, args, ctx, info) {\n        if (!info.operation['__runAtMostOnce']) {\n            info.operation['__runAtMostOnce'] = {};\n        }\n        if (!info.operation['__runAtMostOnce'][randomNumber]) {\n            info.operation['__runAtMostOnce'][randomNumber] = true;\n            value = fn(root, args, ctx, info);\n        }\n        return value;\n    };\n}\nexports.default = addSchemaLevelResolveFunction;\n//# sourceMappingURL=addSchemaLevelResolveFunction.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar _1 = require(\".\");\nfunction assertResolveFunctionsPresent(schema, resolverValidationOptions) {\n    if (resolverValidationOptions === void 0) { resolverValidationOptions = {}; }\n    var _a = resolverValidationOptions.requireResolversForArgs, requireResolversForArgs = _a === void 0 ? false : _a, _b = resolverValidationOptions.requireResolversForNonScalar, requireResolversForNonScalar = _b === void 0 ? false : _b, _c = resolverValidationOptions.requireResolversForAllFields, requireResolversForAllFields = _c === void 0 ? false : _c;\n    if (requireResolversForAllFields &&\n        (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    _1.forEachField(schema, function (field, typeName, fieldName) {\n        // requires a resolve function for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n        // requires a resolve function on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n        // requires a resolve function on every field that returns a non-scalar type\n        if (requireResolversForNonScalar &&\n            !(graphql_1.getNamedType(field.type) instanceof graphql_1.GraphQLScalarType)) {\n            expectResolveFunction(field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolveFunction(field, typeName, fieldName) {\n    if (!field.resolve) {\n        console.warn(\n        // tslint:disable-next-line: max-line-length\n        \"Resolve function missing for \\\"\" + typeName + \".\" + fieldName + \"\\\". To disable this warning check https://github.com/apollostack/graphql-tools/issues/131\");\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new _1.SchemaError(\"Resolver \\\"\" + typeName + \".\" + fieldName + \"\\\" must be a function\");\n    }\n}\nexports.default = assertResolveFunctionsPresent;\n//# sourceMappingURL=assertResolveFunctionsPresent.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar deprecated_decorator_1 = require(\"deprecated-decorator\");\nvar _1 = require(\".\");\n// takes a GraphQL-JS schema and an object of connectors, then attaches\n// the connectors to the context by wrapping each query or mutation resolve\n// function with a function that attaches connectors if they don't exist.\n// attaches connectors only once to make sure they are singletons\nvar attachConnectorsToContext = deprecated_decorator_1.deprecated({\n    version: '0.7.0',\n    url: 'https://github.com/apollostack/graphql-tools/issues/140',\n}, function (schema, connectors) {\n    if (!schema || !(schema instanceof graphql_1.GraphQLSchema)) {\n        throw new Error('schema must be an instance of GraphQLSchema. ' +\n            'This error could be caused by installing more than one version of GraphQL-JS');\n    }\n    if (typeof connectors !== 'object') {\n        var connectorType = typeof connectors;\n        throw new Error(\"Expected connectors to be of type object, got \" + connectorType);\n    }\n    if (Object.keys(connectors).length === 0) {\n        throw new Error('Expected connectors to not be an empty object');\n    }\n    if (Array.isArray(connectors)) {\n        throw new Error('Expected connectors to be of type object, got Array');\n    }\n    if (schema['_apolloConnectorsAttached']) {\n        throw new Error('Connectors already attached to context, cannot attach more than once');\n    }\n    schema['_apolloConnectorsAttached'] = true;\n    var attachconnectorFn = function (root, args, ctx) {\n        if (typeof ctx !== 'object') {\n            // if in any way possible, we should throw an error when the attachconnectors\n            // function is called, not when a query is executed.\n            var contextType = typeof ctx;\n            throw new Error(\"Cannot attach connector because context is not an object: \" + contextType);\n        }\n        if (typeof ctx.connectors === 'undefined') {\n            ctx.connectors = {};\n        }\n        Object.keys(connectors).forEach(function (connectorName) {\n            var connector = connectors[connectorName];\n            if (!!connector.prototype) {\n                ctx.connectors[connectorName] = new connector(ctx);\n            }\n            else {\n                throw new Error(\"Connector must be a function or an class\");\n            }\n        });\n        return root;\n    };\n    _1.addSchemaLevelResolveFunction(schema, attachconnectorFn);\n});\nexports.default = attachConnectorsToContext;\n//# sourceMappingURL=attachConnectorsToContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar schemaVisitor_1 = require(\"../schemaVisitor\");\nfunction attachDirectiveResolvers(schema, directiveResolvers) {\n    if (typeof directiveResolvers !== 'object') {\n        throw new Error(\"Expected directiveResolvers to be of type object, got \" + typeof directiveResolvers);\n    }\n    if (Array.isArray(directiveResolvers)) {\n        throw new Error('Expected directiveResolvers to be of type object, got Array');\n    }\n    var schemaDirectives = Object.create(null);\n    Object.keys(directiveResolvers).forEach(function (directiveName) {\n        schemaDirectives[directiveName] = /** @class */ (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.visitFieldDefinition = function (field) {\n                var _this = this;\n                var resolver = directiveResolvers[directiveName];\n                var originalResolver = field.resolve || graphql_1.defaultFieldResolver;\n                var directiveArgs = this.args;\n                field.resolve = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var source = args[0] /* original args */, context = args[2], info = args[3];\n                    return resolver(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, originalResolver.apply(field, args)];\n                    }); }); }, source, directiveArgs, context, info);\n                };\n            };\n            return class_1;\n        }(schemaVisitor_1.SchemaDirectiveVisitor));\n    });\n    schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n}\nexports.default = attachDirectiveResolvers;\n//# sourceMappingURL=attachDirectiveResolvers.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar _1 = require(\".\");\nvar filterExtensionDefinitions_1 = require(\"./filterExtensionDefinitions\");\nfunction buildSchemaFromTypeDefinitions(typeDefinitions, parseOptions) {\n    // TODO: accept only array here, otherwise interfaces get confusing.\n    var myDefinitions = typeDefinitions;\n    var astDocument;\n    if (isDocumentNode(typeDefinitions)) {\n        astDocument = typeDefinitions;\n    }\n    else if (typeof myDefinitions !== 'string') {\n        if (!Array.isArray(myDefinitions)) {\n            var type = typeof myDefinitions;\n            throw new _1.SchemaError(\"typeDefs must be a string, array or schema AST, got \" + type);\n        }\n        myDefinitions = _1.concatenateTypeDefs(myDefinitions);\n    }\n    if (typeof myDefinitions === 'string') {\n        astDocument = graphql_1.parse(myDefinitions, parseOptions);\n    }\n    var backcompatOptions = { commentDescriptions: true };\n    var typesAst = filterExtensionDefinitions_1.default(astDocument);\n    // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n    var schema = graphql_1.buildASTSchema(typesAst, backcompatOptions);\n    var extensionsAst = _1.extractExtensionDefinitions(astDocument);\n    if (extensionsAst.definitions.length > 0) {\n        // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n        schema = graphql_1.extendSchema(schema, extensionsAst, backcompatOptions);\n    }\n    return schema;\n}\nfunction isDocumentNode(typeDefinitions) {\n    return typeDefinitions.kind !== undefined;\n}\nexports.default = buildSchemaFromTypeDefinitions;\n//# sourceMappingURL=buildSchemaFromTypeDefinitions.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction chainResolvers(resolvers) {\n    return function (root, args, ctx, info) {\n        return resolvers.reduce(function (prev, curResolver) {\n            if (curResolver) {\n                return curResolver(prev, args, ctx, info);\n            }\n            return graphql_1.defaultFieldResolver(prev, args, ctx, info);\n        }, root);\n    };\n}\nexports.chainResolvers = chainResolvers;\n//# sourceMappingURL=chainResolvers.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar _1 = require(\".\");\n// If we have any union or interface types throw if no there is no resolveType or isTypeOf resolvers\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    Object.keys(schema.getTypeMap())\n        .map(function (typeName) { return schema.getType(typeName); })\n        .forEach(function (type) {\n        if (!(type instanceof graphql_1.GraphQLUnionType ||\n            type instanceof graphql_1.GraphQLInterfaceType)) {\n            return;\n        }\n        if (!type.resolveType) {\n            if (requireResolversForResolveType === false) {\n                return;\n            }\n            if (requireResolversForResolveType === true) {\n                throw new _1.SchemaError(\"Type \\\"\" + type.name + \"\\\" is missing a \\\"resolveType\\\" resolver\");\n            }\n            // tslint:disable-next-line:max-line-length\n            console.warn(\"Type \\\"\" + type.name + \"\\\" is missing a \\\"__resolveType\\\" resolver. Pass false into \" +\n                \"\\\"resolverValidationOptions.requireResolversForResolveType\\\" to disable this warning.\");\n        }\n    });\n}\nexports.default = checkForResolveTypeResolver;\n//# sourceMappingURL=checkForResolveTypeResolver.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar _1 = require(\".\");\nfunction concatenateTypeDefs(typeDefinitionsAry, calledFunctionRefs) {\n    if (calledFunctionRefs === void 0) { calledFunctionRefs = []; }\n    var resolvedTypeDefinitions = [];\n    typeDefinitionsAry.forEach(function (typeDef) {\n        if (typeDef.kind !== undefined) {\n            typeDef = graphql_1.print(typeDef);\n        }\n        if (typeof typeDef === 'function') {\n            if (calledFunctionRefs.indexOf(typeDef) === -1) {\n                calledFunctionRefs.push(typeDef);\n                resolvedTypeDefinitions = resolvedTypeDefinitions.concat(concatenateTypeDefs(typeDef(), calledFunctionRefs));\n            }\n        }\n        else if (typeof typeDef === 'string') {\n            resolvedTypeDefinitions.push(typeDef.trim());\n        }\n        else {\n            var type = typeof typeDef;\n            throw new _1.SchemaError(\"typeDef array must contain only strings and functions, got \" + type);\n        }\n    });\n    return uniq(resolvedTypeDefinitions.map(function (x) { return x.trim(); })).join('\\n');\n}\nfunction uniq(array) {\n    return array.reduce(function (accumulator, currentValue) {\n        return accumulator.indexOf(currentValue) === -1\n            ? __spreadArrays(accumulator, [currentValue]) : accumulator;\n    }, []);\n}\nexports.default = concatenateTypeDefs;\n//# sourceMappingURL=concatenateTypeDefs.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\n/*\n * fn: The function to decorate with the logger\n * logger: an object instance of type Logger\n * hint: an optional hint to add to the error's message\n */\nfunction decorateWithLogger(fn, logger, hint) {\n    if (typeof fn === 'undefined') {\n        fn = graphql_1.defaultFieldResolver;\n    }\n    var logError = function (e) {\n        // TODO: clone the error properly\n        var newE = new Error();\n        newE.stack = e.stack;\n        /* istanbul ignore else: always get the hint from addErrorLoggingToSchema */\n        if (hint) {\n            newE['originalMessage'] = e.message;\n            newE['message'] = \"Error in resolver \" + hint + \"\\n\" + e.message;\n        }\n        logger.log(newE);\n    };\n    return function (root, args, ctx, info) {\n        try {\n            var result = fn(root, args, ctx, info);\n            // If the resolve function returns a Promise log any Promise rejects.\n            if (result &&\n                typeof result.then === 'function' &&\n                typeof result.catch === 'function') {\n                result.catch(function (reason) {\n                    // make sure that it's an error we're logging.\n                    var error = reason instanceof Error ? reason : new Error(reason);\n                    logError(error);\n                    // We don't want to leave an unhandled exception so pass on error.\n                    return reason;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            logError(e);\n            // we want to pass on the error, just in case.\n            throw e;\n        }\n    };\n}\nexports.default = decorateWithLogger;\n//# sourceMappingURL=decorateWithLogger.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    var typeNames = Object.keys(__assign(__assign({}, schema.getTypeMap()), resolvers));\n    var extendedResolvers = {};\n    typeNames.forEach(function (typeName) {\n        var typeResolvers = resolvers[typeName];\n        var type = schema.getType(typeName);\n        if (type instanceof graphql_1.GraphQLObjectType) {\n            var interfaceResolvers = type\n                .getInterfaces()\n                .map(function (iFace) { return resolvers[iFace.name]; });\n            extendedResolvers[typeName] = Object.assign.apply(Object, __spreadArrays([{}], interfaceResolvers, [typeResolvers]));\n        }\n        else {\n            if (typeResolvers) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    });\n    return extendedResolvers;\n}\nexports.default = extendResolversFromInterfaces;\n//# sourceMappingURL=extendResolversFromInterfaces.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar newExtensionDefinitionKind = 'ObjectTypeExtension';\nvar interfaceExtensionDefinitionKind = 'InterfaceTypeExtension';\nvar inputObjectExtensionDefinitionKind = 'InputObjectTypeExtension';\nvar unionExtensionDefinitionKind = 'UnionTypeExtension';\nvar enumExtensionDefinitionKind = 'EnumTypeExtension';\nfunction extractExtensionDefinitions(ast) {\n    var extensionDefs = ast.definitions.filter(function (def) {\n        return def.kind === newExtensionDefinitionKind ||\n            def.kind === interfaceExtensionDefinitionKind ||\n            def.kind === inputObjectExtensionDefinitionKind ||\n            def.kind === unionExtensionDefinitionKind ||\n            def.kind === enumExtensionDefinitionKind;\n    });\n    return Object.assign({}, ast, {\n        definitions: extensionDefs,\n    });\n}\nexports.default = extractExtensionDefinitions;\n//# sourceMappingURL=extractExtensionDefinitions.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction filterExtensionDefinitions(ast) {\n    var extensionDefs = ast.definitions.filter(function (def) {\n        return def.kind !== graphql_1.Kind.OBJECT_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.INTERFACE_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.UNION_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.ENUM_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.SCALAR_TYPE_EXTENSION &&\n            def.kind !== graphql_1.Kind.SCHEMA_EXTENSION;\n    });\n    return __assign(__assign({}, ast), { definitions: extensionDefs });\n}\nexports.default = filterExtensionDefinitions;\n//# sourceMappingURL=filterExtensionDefinitions.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\nexports.default = forEachField;\n//# sourceMappingURL=forEachField.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar addResolveFunctionsToSchema_1 = require(\"./addResolveFunctionsToSchema\");\nexports.addResolveFunctionsToSchema = addResolveFunctionsToSchema_1.default;\nvar addSchemaLevelResolveFunction_1 = require(\"./addSchemaLevelResolveFunction\");\nexports.addSchemaLevelResolveFunction = addSchemaLevelResolveFunction_1.default;\nvar assertResolveFunctionsPresent_1 = require(\"./assertResolveFunctionsPresent\");\nexports.assertResolveFunctionsPresent = assertResolveFunctionsPresent_1.default;\nvar attachDirectiveResolvers_1 = require(\"./attachDirectiveResolvers\");\nexports.attachDirectiveResolvers = attachDirectiveResolvers_1.default;\nvar attachConnectorsToContext_1 = require(\"./attachConnectorsToContext\");\nexports.attachConnectorsToContext = attachConnectorsToContext_1.default;\nvar buildSchemaFromTypeDefinitions_1 = require(\"./buildSchemaFromTypeDefinitions\");\nexports.buildSchemaFromTypeDefinitions = buildSchemaFromTypeDefinitions_1.default;\nvar chainResolvers_1 = require(\"./chainResolvers\");\nexports.chainResolvers = chainResolvers_1.chainResolvers;\nvar checkForResolveTypeResolver_1 = require(\"./checkForResolveTypeResolver\");\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver_1.default;\nvar concatenateTypeDefs_1 = require(\"./concatenateTypeDefs\");\nexports.concatenateTypeDefs = concatenateTypeDefs_1.default;\nvar decorateWithLogger_1 = require(\"./decorateWithLogger\");\nexports.decorateWithLogger = decorateWithLogger_1.default;\nvar extendResolversFromInterfaces_1 = require(\"./extendResolversFromInterfaces\");\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces_1.default;\nvar extractExtensionDefinitions_1 = require(\"./extractExtensionDefinitions\");\nexports.extractExtensionDefinitions = extractExtensionDefinitions_1.default;\nvar forEachField_1 = require(\"./forEachField\");\nexports.forEachField = forEachField_1.default;\nvar SchemaError_1 = require(\"./SchemaError\");\nexports.SchemaError = SchemaError_1.default;\n//# sourceMappingURL=index.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeA === typeB) {\n        return true;\n    }\n    else if (graphql_1.isCompositeType(typeA) && graphql_1.isCompositeType(typeB)) {\n        return graphql_1.doTypesOverlap(schema, typeA, typeB);\n    }\n    else {\n        return false;\n    }\n}\nexports.default = implementsAbstractType;\n//# sourceMappingURL=implementsAbstractType.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmptyObject(obj) {\n    if (!obj) {\n        return true;\n    }\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.default = isEmptyObject;\n//# sourceMappingURL=isEmptyObject.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\n// FIXME: Replace with https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L139\nexports.specifiedScalarTypes = [\n    graphql_1.GraphQLString,\n    graphql_1.GraphQLInt,\n    graphql_1.GraphQLFloat,\n    graphql_1.GraphQLBoolean,\n    graphql_1.GraphQLID,\n];\nfunction isSpecifiedScalarType(type) {\n    return (graphql_1.isNamedType(type) &&\n        // Would prefer to use specifiedScalarTypes.some(), however %checks needs\n        // a simple expression.\n        (type.name === graphql_1.GraphQLString.name ||\n            type.name === graphql_1.GraphQLInt.name ||\n            type.name === graphql_1.GraphQLFloat.name ||\n            type.name === graphql_1.GraphQLBoolean.name ||\n            type.name === graphql_1.GraphQLID.name));\n}\nexports.default = isSpecifiedScalarType;\n//# sourceMappingURL=isSpecifiedScalarType.js.map","function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar schemaVisitor_1 = require(\"./schemaVisitor\");\nvar mergeDeep_1 = require(\"./mergeDeep\");\nvar generate_1 = require(\"./generate\");\nfunction makeExecutableSchema(_a) {\n    var typeDefs = _a.typeDefs, _b = _a.resolvers, resolvers = _b === void 0 ? {} : _b, connectors = _a.connectors, logger = _a.logger, _c = _a.allowUndefinedInResolve, allowUndefinedInResolve = _c === void 0 ? true : _c, _d = _a.resolverValidationOptions, resolverValidationOptions = _d === void 0 ? {} : _d, _e = _a.directiveResolvers, directiveResolvers = _e === void 0 ? null : _e, _f = _a.schemaDirectives, schemaDirectives = _f === void 0 ? null : _f, _g = _a.parseOptions, parseOptions = _g === void 0 ? {} : _g, _h = _a.inheritResolversFromInterfaces, inheritResolversFromInterfaces = _h === void 0 ? false : _h;\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new generate_1.SchemaError('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new generate_1.SchemaError('Must provide typeDefs');\n    }\n    if (!resolvers) {\n        throw new generate_1.SchemaError('Must provide resolvers');\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    var resolverMap = Array.isArray(resolvers)\n        ? resolvers.filter(function (resolverObj) { return typeof resolverObj === 'object'; }).reduce(mergeDeep_1.default, {})\n        : resolvers;\n    // Arguments are now validated and cleaned up\n    var schema = generate_1.buildSchemaFromTypeDefinitions(typeDefs, parseOptions);\n    schema = generate_1.addResolveFunctionsToSchema({\n        schema: schema,\n        resolvers: resolverMap,\n        resolverValidationOptions: resolverValidationOptions,\n        inheritResolversFromInterfaces: inheritResolversFromInterfaces\n    });\n    generate_1.assertResolveFunctionsPresent(schema, resolverValidationOptions);\n    if (!allowUndefinedInResolve) {\n        addCatchUndefinedToSchema(schema);\n    }\n    if (logger) {\n        addErrorLoggingToSchema(schema, logger);\n    }\n    if (typeof resolvers['__schema'] === 'function') {\n        // TODO a bit of a hack now, better rewrite generateSchema to attach it there.\n        // not doing that now, because I'd have to rewrite a lot of tests.\n        generate_1.addSchemaLevelResolveFunction(schema, resolvers['__schema']);\n    }\n    if (connectors) {\n        // connectors are optional, at least for now. That means you can just import them in the resolve\n        // function if you want.\n        generate_1.attachConnectorsToContext(schema, connectors);\n    }\n    if (directiveResolvers) {\n        generate_1.attachDirectiveResolvers(schema, directiveResolvers);\n    }\n    if (schemaDirectives) {\n        schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\nfunction decorateToCatchUndefined(fn, hint) {\n    if (typeof fn === 'undefined') {\n        fn = graphql_1.defaultFieldResolver;\n    }\n    return function (root, args, ctx, info) {\n        var result = fn(root, args, ctx, info);\n        if (typeof result === 'undefined') {\n            throw new Error(\"Resolve function for \\\"\" + hint + \"\\\" returned undefined\");\n        }\n        return result;\n    };\n}\nfunction addCatchUndefinedToSchema(schema) {\n    generate_1.forEachField(schema, function (field, typeName, fieldName) {\n        var errorHint = typeName + \".\" + fieldName;\n        field.resolve = decorateToCatchUndefined(field.resolve, errorHint);\n    });\n}\nexports.addCatchUndefinedToSchema = addCatchUndefinedToSchema;\nfunction addErrorLoggingToSchema(schema, logger) {\n    if (!logger) {\n        throw new Error('Must provide a logger');\n    }\n    if (typeof logger.log !== 'function') {\n        throw new Error('Logger.log must be a function');\n    }\n    generate_1.forEachField(schema, function (field, typeName, fieldName) {\n        var errorHint = typeName + \".\" + fieldName;\n        field.resolve = generate_1.decorateWithLogger(field.resolve, logger, errorHint);\n    });\n}\nexports.addErrorLoggingToSchema = addErrorLoggingToSchema;\n__export(require(\"./generate\"));\n//# sourceMappingURL=makeExecutableSchema.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction mergeDeep(target, source) {\n    var output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n            var _a, _b;\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n            }\n        });\n    }\n    return output;\n}\nexports.default = mergeDeep;\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceMappingURL=mergeDeep.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar uuid = require(\"uuid\");\nvar makeExecutableSchema_1 = require(\"./makeExecutableSchema\");\n// This function wraps addMockFunctionsToSchema for more convenience\nfunction mockServer(schema, mocks, preserveResolvers) {\n    if (preserveResolvers === void 0) { preserveResolvers = false; }\n    var mySchema;\n    if (!(schema instanceof graphql_1.GraphQLSchema)) {\n        // TODO: provide useful error messages here if this fails\n        mySchema = makeExecutableSchema_1.buildSchemaFromTypeDefinitions(schema);\n    }\n    else {\n        mySchema = schema;\n    }\n    addMockFunctionsToSchema({ schema: mySchema, mocks: mocks, preserveResolvers: preserveResolvers });\n    return { query: function (query, vars) { return graphql_1.graphql(mySchema, query, {}, {}, vars); } };\n}\nexports.mockServer = mockServer;\nvar defaultMockMap = new Map();\ndefaultMockMap.set('Int', function () { return Math.round(Math.random() * 200) - 100; });\ndefaultMockMap.set('Float', function () { return Math.random() * 200 - 100; });\ndefaultMockMap.set('String', function () { return 'Hello World'; });\ndefaultMockMap.set('Boolean', function () { return Math.random() > 0.5; });\ndefaultMockMap.set('ID', function () { return uuid.v4(); });\n// TODO allow providing a seed such that lengths of list could be deterministic\n// this could be done by using casual to get a random list length if the casual\n// object is global.\nfunction addMockFunctionsToSchema(_a) {\n    var schema = _a.schema, _b = _a.mocks, mocks = _b === void 0 ? {} : _b, _c = _a.preserveResolvers, preserveResolvers = _c === void 0 ? false : _c;\n    if (!schema) {\n        throw new Error('Must provide schema to mock');\n    }\n    if (!(schema instanceof graphql_1.GraphQLSchema)) {\n        throw new Error('Value at \"schema\" must be of type GraphQLSchema');\n    }\n    if (!isObject(mocks)) {\n        throw new Error('mocks must be of type Object');\n    }\n    // use Map internally, because that API is nicer.\n    var mockFunctionMap = new Map();\n    Object.keys(mocks).forEach(function (typeName) {\n        mockFunctionMap.set(typeName, mocks[typeName]);\n    });\n    mockFunctionMap.forEach(function (mockFunction, mockTypeName) {\n        if (typeof mockFunction !== 'function') {\n            throw new Error(\"mockFunctionMap[\" + mockTypeName + \"] must be a function\");\n        }\n    });\n    var mockType = function (type, typeName, fieldName) {\n        // order of precendence for mocking:\n        // 1. if the object passed in already has fieldName, just use that\n        // --> if it's a function, that becomes your resolver\n        // --> if it's a value, the mock resolver will return that\n        // 2. if the nullableType is a list, recurse\n        // 2. if there's a mock defined for this typeName, that will be used\n        // 3. if there's no mock defined, use the default mocks for this type\n        return function (root, args, context, info) {\n            // nullability doesn't matter for the purpose of mocking.\n            var fieldType = graphql_1.getNullableType(type);\n            var namedFieldType = graphql_1.getNamedType(fieldType);\n            if (root && typeof root[fieldName] !== 'undefined') {\n                var result = void 0;\n                // if we're here, the field is already defined\n                if (typeof root[fieldName] === 'function') {\n                    result = root[fieldName](root, args, context, info);\n                    if (result instanceof MockList) {\n                        result = result.mock(root, args, context, info, fieldType, mockType);\n                    }\n                }\n                else {\n                    result = root[fieldName];\n                }\n                // Now we merge the result with the default mock for this type.\n                // This allows overriding defaults while writing very little code.\n                if (mockFunctionMap.has(namedFieldType.name)) {\n                    result = mergeMocks(mockFunctionMap\n                        .get(namedFieldType.name)\n                        .bind(null, root, args, context, info), result);\n                }\n                return result;\n            }\n            if (fieldType instanceof graphql_1.GraphQLList ||\n                fieldType instanceof graphql_1.GraphQLNonNull) {\n                return [\n                    mockType(fieldType.ofType)(root, args, context, info),\n                    mockType(fieldType.ofType)(root, args, context, info),\n                ];\n            }\n            if (mockFunctionMap.has(fieldType.name) &&\n                !(fieldType instanceof graphql_1.GraphQLUnionType ||\n                    fieldType instanceof graphql_1.GraphQLInterfaceType)) {\n                // the object passed doesn't have this field, so we apply the default mock\n                return mockFunctionMap.get(fieldType.name)(root, args, context, info);\n            }\n            if (fieldType instanceof graphql_1.GraphQLObjectType) {\n                // objects don't return actual data, we only need to mock scalars!\n                return {};\n            }\n            // if a mock function is provided for unionType or interfaceType, execute it to resolve the concrete type\n            // otherwise randomly pick a type from all implementation types\n            if (fieldType instanceof graphql_1.GraphQLUnionType ||\n                fieldType instanceof graphql_1.GraphQLInterfaceType) {\n                var implementationType = void 0;\n                if (mockFunctionMap.has(fieldType.name)) {\n                    var interfaceMockObj = mockFunctionMap.get(fieldType.name)(root, args, context, info);\n                    if (!interfaceMockObj || !interfaceMockObj.__typename) {\n                        return Error(\"Please return a __typename in \\\"\" + fieldType.name + \"\\\"\");\n                    }\n                    implementationType = schema.getType(interfaceMockObj.__typename);\n                }\n                else {\n                    var possibleTypes = schema.getPossibleTypes(fieldType);\n                    implementationType = getRandomElement(possibleTypes);\n                }\n                return Object.assign({ __typename: implementationType }, mockType(implementationType)(root, args, context, info));\n            }\n            if (fieldType instanceof graphql_1.GraphQLEnumType) {\n                return getRandomElement(fieldType.getValues()).value;\n            }\n            if (defaultMockMap.has(fieldType.name)) {\n                return defaultMockMap.get(fieldType.name)(root, args, context, info);\n            }\n            // if we get to here, we don't have a value, and we don't have a mock for this type,\n            // we could return undefined, but that would be hard to debug, so we throw instead.\n            // however, we returning it instead of throwing it, so preserveResolvers can handle the failures.\n            return Error(\"No mock defined for type \\\"\" + fieldType.name + \"\\\"\");\n        };\n    };\n    makeExecutableSchema_1.forEachField(schema, function (field, typeName, fieldName) {\n        assignResolveType(field.type, preserveResolvers);\n        var mockResolver;\n        // we have to handle the root mutation and root query types differently,\n        // because no resolver is called at the root.\n        /* istanbul ignore next: Must provide schema DefinitionNode with query type or a type named Query. */\n        var isOnQueryType = schema.getQueryType() && schema.getQueryType().name === typeName;\n        var isOnMutationType = schema.getMutationType() && schema.getMutationType().name === typeName;\n        if (isOnQueryType || isOnMutationType) {\n            if (mockFunctionMap.has(typeName)) {\n                var rootMock_1 = mockFunctionMap.get(typeName);\n                // XXX: BUG in here, need to provide proper signature for rootMock.\n                if (typeof rootMock_1(undefined, {}, {}, {})[fieldName] === 'function') {\n                    mockResolver = function (root, args, context, info) {\n                        var updatedRoot = root || {}; // TODO: should we clone instead?\n                        updatedRoot[fieldName] = rootMock_1(root, args, context, info)[fieldName];\n                        // XXX this is a bit of a hack to still use mockType, which\n                        // lets you mock lists etc. as well\n                        // otherwise we could just set field.resolve to rootMock()[fieldName]\n                        // it's like pretending there was a resolve function that ran before\n                        // the root resolve function.\n                        return mockType(field.type, typeName, fieldName)(updatedRoot, args, context, info);\n                    };\n                }\n            }\n        }\n        if (!mockResolver) {\n            mockResolver = mockType(field.type, typeName, fieldName);\n        }\n        if (!preserveResolvers || !field.resolve) {\n            field.resolve = mockResolver;\n        }\n        else {\n            var oldResolver_1 = field.resolve;\n            field.resolve = function (rootObject, args, context, info) {\n                return Promise.all([\n                    mockResolver(rootObject, args, context, info),\n                    oldResolver_1(rootObject, args, context, info),\n                ]).then(function (values) {\n                    var mockedValue = values[0], resolvedValue = values[1];\n                    // In case we couldn't mock\n                    if (mockedValue instanceof Error) {\n                        // only if value was not resolved, populate the error.\n                        if (undefined === resolvedValue) {\n                            throw mockedValue;\n                        }\n                        return resolvedValue;\n                    }\n                    if (resolvedValue instanceof Date && mockedValue instanceof Date) {\n                        return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                    }\n                    if (isObject(mockedValue) && isObject(resolvedValue)) {\n                        // Object.assign() won't do here, as we need to all properties, including\n                        // the non-enumerable ones and defined using Object.defineProperty\n                        var emptyObject = Object.create(Object.getPrototypeOf(resolvedValue));\n                        return copyOwnProps(emptyObject, resolvedValue, mockedValue);\n                    }\n                    return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                });\n            };\n        }\n    });\n}\nexports.addMockFunctionsToSchema = addMockFunctionsToSchema;\nfunction isObject(thing) {\n    return thing === Object(thing) && !Array.isArray(thing);\n}\n// returns a random element from that ary\nfunction getRandomElement(ary) {\n    var sample = Math.floor(Math.random() * ary.length);\n    return ary[sample];\n}\nfunction mergeObjects(a, b) {\n    return Object.assign(a, b);\n}\nfunction copyOwnPropsIfNotPresent(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function (prop) {\n        if (!Object.getOwnPropertyDescriptor(target, prop)) {\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n        }\n    });\n}\nfunction copyOwnProps(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        var chain = source;\n        while (chain) {\n            copyOwnPropsIfNotPresent(target, chain);\n            chain = Object.getPrototypeOf(chain);\n        }\n    });\n    return target;\n}\n// takes either an object or a (possibly nested) array\n// and completes the customMock object with any fields\n// defined on genericMock\n// only merges objects or arrays. Scalars are returned as is\nfunction mergeMocks(genericMockFunction, customMock) {\n    if (Array.isArray(customMock)) {\n        return customMock.map(function (el) { return mergeMocks(genericMockFunction, el); });\n    }\n    if (isObject(customMock)) {\n        return mergeObjects(genericMockFunction(), customMock);\n    }\n    return customMock;\n}\nfunction getResolveType(namedFieldType) {\n    if (namedFieldType instanceof graphql_1.GraphQLInterfaceType ||\n        namedFieldType instanceof graphql_1.GraphQLUnionType) {\n        return namedFieldType.resolveType;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction assignResolveType(type, preserveResolvers) {\n    var fieldType = graphql_1.getNullableType(type);\n    var namedFieldType = graphql_1.getNamedType(fieldType);\n    var oldResolveType = getResolveType(namedFieldType);\n    if (preserveResolvers && oldResolveType && oldResolveType.length) {\n        return;\n    }\n    if (namedFieldType instanceof graphql_1.GraphQLUnionType ||\n        namedFieldType instanceof graphql_1.GraphQLInterfaceType) {\n        // the default `resolveType` always returns null. We add a fallback\n        // resolution that works with how unions and interface are mocked\n        namedFieldType.resolveType = function (data, context, info) {\n            return info.schema.getType(data.__typename);\n        };\n    }\n}\nvar MockList = /** @class */ (function () {\n    // wrappedFunction can return another MockList or a value\n    function MockList(len, wrappedFunction) {\n        this.len = len;\n        if (typeof wrappedFunction !== 'undefined') {\n            if (typeof wrappedFunction !== 'function') {\n                throw new Error('Second argument to MockList must be a function or undefined');\n            }\n            this.wrappedFunction = wrappedFunction;\n        }\n    }\n    MockList.prototype.mock = function (root, args, context, info, fieldType, mockTypeFunc) {\n        var arr;\n        if (Array.isArray(this.len)) {\n            arr = new Array(this.randint(this.len[0], this.len[1]));\n        }\n        else {\n            arr = new Array(this.len);\n        }\n        for (var i = 0; i < arr.length; i++) {\n            if (typeof this.wrappedFunction === 'function') {\n                var res = this.wrappedFunction(root, args, context, info);\n                if (res instanceof MockList) {\n                    var nullableType = graphql_1.getNullableType(fieldType.ofType);\n                    arr[i] = res.mock(root, args, context, info, nullableType, mockTypeFunc);\n                }\n                else {\n                    arr[i] = res;\n                }\n            }\n            else {\n                arr[i] = mockTypeFunc(fieldType.ofType)(root, args, context, info);\n            }\n        }\n        return arr;\n    };\n    MockList.prototype.randint = function (low, high) {\n        return Math.floor(Math.random() * (high - low + 1) + low);\n    };\n    return MockList;\n}());\nexports.MockList = MockList;\n//# sourceMappingURL=mock.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar values_1 = require(\"graphql/execution/values\");\nvar hasOwn = Object.prototype.hasOwnProperty;\n// Abstract base class of any visitor implementation, defining the available\n// visitor methods along with their parameter types, and providing a static\n// helper function for determining whether a subclass implements a given\n// visitor method, as opposed to inheriting one of the stubs defined here.\nvar SchemaVisitor = /** @class */ (function () {\n    function SchemaVisitor() {\n    }\n    // Determine if this SchemaVisitor (sub)class implements a particular\n    // visitor method.\n    SchemaVisitor.implementsVisitorMethod = function (methodName) {\n        if (!methodName.startsWith('visit')) {\n            return false;\n        }\n        var method = this.prototype[methodName];\n        if (typeof method !== 'function') {\n            return false;\n        }\n        if (this === SchemaVisitor) {\n            // The SchemaVisitor class implements every visitor method.\n            return true;\n        }\n        var stub = SchemaVisitor.prototype[methodName];\n        if (method === stub) {\n            // If this.prototype[methodName] was just inherited from SchemaVisitor,\n            // then this class does not really implement the method.\n            return false;\n        }\n        return true;\n    };\n    // Concrete subclasses of SchemaVisitor should override one or more of these\n    // visitor methods, in order to express their interest in handling certain\n    // schema types/locations. Each method may return null to remove the given\n    // type from the schema, a non-null value of the same type to update the\n    // type in the schema, or nothing to leave the type as it was.\n    /* tslint:disable:no-empty */\n    SchemaVisitor.prototype.visitSchema = function (schema) { };\n    SchemaVisitor.prototype.visitScalar = function (scalar) { };\n    SchemaVisitor.prototype.visitObject = function (object) { };\n    SchemaVisitor.prototype.visitFieldDefinition = function (field, details) { };\n    SchemaVisitor.prototype.visitArgumentDefinition = function (argument, details) { };\n    SchemaVisitor.prototype.visitInterface = function (iface) { };\n    SchemaVisitor.prototype.visitUnion = function (union) { };\n    SchemaVisitor.prototype.visitEnum = function (type) { };\n    SchemaVisitor.prototype.visitEnumValue = function (value, details) { };\n    SchemaVisitor.prototype.visitInputObject = function (object) { };\n    SchemaVisitor.prototype.visitInputFieldDefinition = function (field, details) { };\n    return SchemaVisitor;\n}());\nexports.SchemaVisitor = SchemaVisitor;\n// Generic function for visiting GraphQLSchema objects.\nfunction visitSchema(schema, \n// To accommodate as many different visitor patterns as possible, the\n// visitSchema function does not simply accept a single instance of the\n// SchemaVisitor class, but instead accepts a function that takes the\n// current VisitableSchemaType object and the name of a visitor method and\n// returns an array of SchemaVisitor instances that implement the visitor\n// method and have an interest in handling the given VisitableSchemaType\n// object. In the simplest case, this function can always return an array\n// containing a single visitor object, without even looking at the type or\n// methodName parameters. In other cases, this function might sometimes\n// return an empty array to indicate there are no visitors that should be\n// applied to the given VisitableSchemaType object. For an example of a\n// visitor pattern that benefits from this abstraction, see the\n// SchemaDirectiveVisitor class below.\nvisitorSelector) {\n    // Helper function that calls visitorSelector and applies the resulting\n    // visitors to the given type, with arguments [type, ...args].\n    function callMethod(methodName, type) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        visitorSelector(type, methodName).every(function (visitor) {\n            var newType = visitor[methodName].apply(visitor, __spreadArrays([type], args));\n            if (typeof newType === 'undefined') {\n                // Keep going without modifying type.\n                return true;\n            }\n            if (methodName === 'visitSchema' ||\n                type instanceof graphql_1.GraphQLSchema) {\n                throw new Error(\"Method \" + methodName + \" cannot replace schema with \" + newType);\n            }\n            if (newType === null) {\n                // Stop the loop and return null form callMethod, which will cause\n                // the type to be removed from the schema.\n                type = null;\n                return false;\n            }\n            // Update type to the new type returned by the visitor method, so that\n            // later directives will see the new type, and callMethod will return\n            // the final type.\n            type = newType;\n            return true;\n        });\n        // If there were no directives for this type object, or if all visitor\n        // methods returned nothing, type will be returned unmodified.\n        return type;\n    }\n    // Recursive helper function that calls any appropriate visitor methods for\n    // each object in the schema, then traverses the object's children (if any).\n    function visit(type) {\n        if (type instanceof graphql_1.GraphQLSchema) {\n            // Unlike the other types, the root GraphQLSchema object cannot be\n            // replaced by visitor methods, because that would make life very hard\n            // for SchemaVisitor subclasses that rely on the original schema object.\n            callMethod('visitSchema', type);\n            updateEachKey(type.getTypeMap(), function (namedType, typeName) {\n                if (!typeName.startsWith('__')) {\n                    // Call visit recursively to let it determine which concrete\n                    // subclass of GraphQLNamedType we found in the type map. Because\n                    // we're using updateEachKey, the result of visit(namedType) may\n                    // cause the type to be removed or replaced.\n                    return visit(namedType);\n                }\n            });\n            return type;\n        }\n        if (type instanceof graphql_1.GraphQLObjectType) {\n            // Note that callMethod('visitObject', type) may not actually call any\n            // methods, if there are no @directive annotations associated with this\n            // type, or if this SchemaDirectiveVisitor subclass does not override\n            // the visitObject method.\n            var newObject = callMethod('visitObject', type);\n            if (newObject) {\n                visitFields(newObject);\n            }\n            return newObject;\n        }\n        if (type instanceof graphql_1.GraphQLInterfaceType) {\n            var newInterface = callMethod('visitInterface', type);\n            if (newInterface) {\n                visitFields(newInterface);\n            }\n            return newInterface;\n        }\n        if (type instanceof graphql_1.GraphQLInputObjectType) {\n            var newInputObject_1 = callMethod('visitInputObject', type);\n            if (newInputObject_1) {\n                updateEachKey(newInputObject_1.getFields(), function (field) {\n                    // Since we call a different method for input object fields, we\n                    // can't reuse the visitFields function here.\n                    return callMethod('visitInputFieldDefinition', field, {\n                        objectType: newInputObject_1,\n                    });\n                });\n            }\n            return newInputObject_1;\n        }\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return callMethod('visitScalar', type);\n        }\n        if (type instanceof graphql_1.GraphQLUnionType) {\n            return callMethod('visitUnion', type);\n        }\n        if (type instanceof graphql_1.GraphQLEnumType) {\n            var newEnum_1 = callMethod('visitEnum', type);\n            if (newEnum_1) {\n                updateEachKey(newEnum_1.getValues(), function (value) {\n                    return callMethod('visitEnumValue', value, {\n                        enumType: newEnum_1,\n                    });\n                });\n            }\n            return newEnum_1;\n        }\n        throw new Error(\"Unexpected schema type: \" + type);\n    }\n    function visitFields(type) {\n        updateEachKey(type.getFields(), function (field) {\n            // It would be nice if we could call visit(field) recursively here, but\n            // GraphQLField is merely a type, not a value that can be detected using\n            // an instanceof check, so we have to visit the fields in this lexical\n            // context, so that TypeScript can validate the call to\n            // visitFieldDefinition.\n            var newField = callMethod('visitFieldDefinition', field, {\n                // While any field visitor needs a reference to the field object, some\n                // field visitors may also need to know the enclosing (parent) type,\n                // perhaps to determine if the parent is a GraphQLObjectType or a\n                // GraphQLInterfaceType. To obtain a reference to the parent, a\n                // visitor method can have a second parameter, which will be an object\n                // with an .objectType property referring to the parent.\n                objectType: type,\n            });\n            if (newField && newField.args) {\n                updateEachKey(newField.args, function (arg) {\n                    return callMethod('visitArgumentDefinition', arg, {\n                        // Like visitFieldDefinition, visitArgumentDefinition takes a\n                        // second parameter that provides additional context, namely the\n                        // parent .field and grandparent .objectType. Remember that the\n                        // current GraphQLSchema is always available via this.schema.\n                        field: newField,\n                        objectType: type,\n                    });\n                });\n            }\n            return newField;\n        });\n    }\n    visit(schema);\n    // Return the original schema for convenience, even though it cannot have\n    // been replaced or removed by the code above.\n    return schema;\n}\nexports.visitSchema = visitSchema;\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\nfunction healSchema(schema) {\n    heal(schema);\n    return schema;\n    function heal(type) {\n        if (type instanceof graphql_1.GraphQLSchema) {\n            var originalTypeMap_1 = type.getTypeMap();\n            var actualNamedTypeMap_1 = Object.create(null);\n            // If any of the .name properties of the GraphQLNamedType objects in\n            // schema.getTypeMap() have changed, the keys of the type map need to\n            // be updated accordingly.\n            each(originalTypeMap_1, function (namedType, typeName) {\n                if (typeName.startsWith('__')) {\n                    return;\n                }\n                var actualName = namedType.name;\n                if (actualName.startsWith('__')) {\n                    return;\n                }\n                if (hasOwn.call(actualNamedTypeMap_1, actualName)) {\n                    throw new Error(\"Duplicate schema type name \" + actualName);\n                }\n                actualNamedTypeMap_1[actualName] = namedType;\n                // Note: we are deliberately leaving namedType in the schema by its\n                // original name (which might be different from actualName), so that\n                // references by that name can be healed.\n            });\n            // Now add back every named type by its actual name.\n            each(actualNamedTypeMap_1, function (namedType, typeName) {\n                originalTypeMap_1[typeName] = namedType;\n            });\n            // Directive declaration argument types can refer to named types.\n            each(type.getDirectives(), function (decl) {\n                if (decl.args) {\n                    each(decl.args, function (arg) {\n                        arg.type = healType(arg.type);\n                    });\n                }\n            });\n            each(originalTypeMap_1, function (namedType, typeName) {\n                if (!typeName.startsWith('__')) {\n                    heal(namedType);\n                }\n            });\n            updateEachKey(originalTypeMap_1, function (namedType, typeName) {\n                // Dangling references to renamed types should remain in the schema\n                // during healing, but must be removed now, so that the following\n                // invariant holds for all names: schema.getType(name).name === name\n                if (!typeName.startsWith('__') &&\n                    !hasOwn.call(actualNamedTypeMap_1, typeName)) {\n                    return null;\n                }\n            });\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType) {\n            healFields(type);\n            each(type.getInterfaces(), function (iface) { return heal(iface); });\n        }\n        else if (type instanceof graphql_1.GraphQLInterfaceType) {\n            healFields(type);\n        }\n        else if (type instanceof graphql_1.GraphQLInputObjectType) {\n            each(type.getFields(), function (field) {\n                field.type = healType(field.type);\n            });\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            // Nothing to do.\n        }\n        else if (type instanceof graphql_1.GraphQLUnionType) {\n            updateEachKey(type.getTypes(), function (t) { return healType(t); });\n        }\n        else if (type instanceof graphql_1.GraphQLEnumType) {\n            // Nothing to do.\n        }\n        else {\n            throw new Error(\"Unexpected schema type: \" + type);\n        }\n    }\n    function healFields(type) {\n        each(type.getFields(), function (field) {\n            field.type = healType(field.type);\n            if (field.args) {\n                each(field.args, function (arg) {\n                    arg.type = healType(arg.type);\n                });\n            }\n        });\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if (type instanceof graphql_1.GraphQLList) {\n            type = new graphql_1.GraphQLList(healType(type.ofType));\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            type = new graphql_1.GraphQLNonNull(healType(type.ofType));\n        }\n        else if (graphql_1.isNamedType(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            var namedType = type;\n            var officialType = schema.getType(namedType.name);\n            if (officialType && namedType !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\nexports.healSchema = healSchema;\n// This class represents a reusable implementation of a @directive that may\n// appear in a GraphQL schema written in Schema Definition Language.\n//\n// By overriding one or more visit{Object,Union,...} methods, a subclass\n// registers interest in certain schema types, such as GraphQLObjectType,\n// GraphQLUnionType, etc. When SchemaDirectiveVisitor.visitSchemaDirectives is\n// called with a GraphQLSchema object and a map of visitor subclasses, the\n// overidden methods of those subclasses allow the visitors to obtain\n// references to any type objects that have @directives attached to them,\n// enabling visitors to inspect or modify the schema as appropriate.\n//\n// For example, if a directive called @rest(url: \"...\") appears after a field\n// definition, a SchemaDirectiveVisitor subclass could provide meaning to that\n// directive by overriding the visitFieldDefinition method (which receives a\n// GraphQLField parameter), and then the body of that visitor method could\n// manipulate the field's resolver function to fetch data from a REST endpoint\n// described by the url argument passed to the @rest directive:\n//\n//   const typeDefs = `\n//   type Query {\n//     people: [Person] @rest(url: \"/api/v1/people\")\n//   }`;\n//\n//   const schema = makeExecutableSchema({ typeDefs });\n//\n//   SchemaDirectiveVisitor.visitSchemaDirectives(schema, {\n//     rest: class extends SchemaDirectiveVisitor {\n//       public visitFieldDefinition(field: GraphQLField<any, any>) {\n//         const { url } = this.args;\n//         field.resolve = () => fetch(url);\n//       }\n//     }\n//   });\n//\n// The subclass in this example is defined as an anonymous class expression,\n// for brevity. A truly reusable SchemaDirectiveVisitor would most likely be\n// defined in a library using a named class declaration, and then exported for\n// consumption by other modules and packages.\n//\n// See below for a complete list of overridable visitor methods, their\n// parameter types, and more details about the properties exposed by instances\n// of the SchemaDirectiveVisitor class.\nvar SchemaDirectiveVisitor = /** @class */ (function (_super) {\n    __extends(SchemaDirectiveVisitor, _super);\n    // Mark the constructor protected to enforce passing SchemaDirectiveVisitor\n    // subclasses (not instances) to visitSchemaDirectives.\n    function SchemaDirectiveVisitor(config) {\n        var _this = _super.call(this) || this;\n        _this.name = config.name;\n        _this.args = config.args;\n        _this.visitedType = config.visitedType;\n        _this.schema = config.schema;\n        _this.context = config.context;\n        return _this;\n    }\n    // Override this method to return a custom GraphQLDirective (or modify one\n    // already present in the schema) to enforce argument types, provide default\n    // argument values, or specify schema locations where this @directive may\n    // appear. By default, any declaration found in the schema will be returned.\n    SchemaDirectiveVisitor.getDirectiveDeclaration = function (directiveName, schema) {\n        return schema.getDirective(directiveName);\n    };\n    // Call SchemaDirectiveVisitor.visitSchemaDirectives to visit every\n    // @directive in the schema and create an appropriate SchemaDirectiveVisitor\n    // instance to visit the object decorated by the @directive.\n    SchemaDirectiveVisitor.visitSchemaDirectives = function (schema, directiveVisitors, \n    // Optional context object that will be available to all visitor instances\n    // via this.context. Defaults to an empty null-prototype object.\n    context) {\n        if (context === void 0) { context = Object.create(null); }\n        // If the schema declares any directives for public consumption, record\n        // them here so that we can properly coerce arguments when/if we encounter\n        // an occurrence of the directive while walking the schema below.\n        var declaredDirectives = this.getDeclaredDirectives(schema, directiveVisitors);\n        // Map from directive names to lists of SchemaDirectiveVisitor instances\n        // created while visiting the schema.\n        var createdVisitors = Object.create(null);\n        Object.keys(directiveVisitors).forEach(function (directiveName) {\n            createdVisitors[directiveName] = [];\n        });\n        function visitorSelector(type, methodName) {\n            var visitors = [];\n            var directiveNodes = type.astNode && type.astNode.directives;\n            if (!directiveNodes) {\n                return visitors;\n            }\n            directiveNodes.forEach(function (directiveNode) {\n                var directiveName = directiveNode.name.value;\n                if (!hasOwn.call(directiveVisitors, directiveName)) {\n                    return;\n                }\n                var visitorClass = directiveVisitors[directiveName];\n                // Avoid creating visitor objects if visitorClass does not override\n                // the visitor method named by methodName.\n                if (!visitorClass.implementsVisitorMethod(methodName)) {\n                    return;\n                }\n                var decl = declaredDirectives[directiveName];\n                var args;\n                if (decl) {\n                    // If this directive was explicitly declared, use the declared\n                    // argument types (and any default values) to check, coerce, and/or\n                    // supply default values for the given arguments.\n                    args = values_1.getArgumentValues(decl, directiveNode);\n                }\n                else {\n                    // If this directive was not explicitly declared, just convert the\n                    // argument nodes to their corresponding JavaScript values.\n                    args = Object.create(null);\n                    directiveNode.arguments.forEach(function (arg) {\n                        args[arg.name.value] = valueFromASTUntyped(arg.value);\n                    });\n                }\n                // As foretold in comments near the top of the visitSchemaDirectives\n                // method, this is where instances of the SchemaDirectiveVisitor class\n                // get created and assigned names. While subclasses could override the\n                // constructor method, the constructor is marked as protected, so\n                // these are the only arguments that will ever be passed.\n                visitors.push(new visitorClass({\n                    name: directiveName,\n                    args: args,\n                    visitedType: type,\n                    schema: schema,\n                    context: context,\n                }));\n            });\n            if (visitors.length > 0) {\n                visitors.forEach(function (visitor) {\n                    createdVisitors[visitor.name].push(visitor);\n                });\n            }\n            return visitors;\n        }\n        visitSchema(schema, visitorSelector);\n        // Automatically update any references to named schema types replaced\n        // during the traversal, so implementors don't have to worry about that.\n        healSchema(schema);\n        return createdVisitors;\n    };\n    SchemaDirectiveVisitor.getDeclaredDirectives = function (schema, directiveVisitors) {\n        var declaredDirectives = Object.create(null);\n        each(schema.getDirectives(), function (decl) {\n            declaredDirectives[decl.name] = decl;\n        });\n        // If the visitor subclass overrides getDirectiveDeclaration, and it\n        // returns a non-null GraphQLDirective, use that instead of any directive\n        // declared in the schema itself. Reasoning: if a SchemaDirectiveVisitor\n        // goes to the trouble of implementing getDirectiveDeclaration, it should\n        // be able to rely on that implementation.\n        each(directiveVisitors, function (visitorClass, directiveName) {\n            var decl = visitorClass.getDirectiveDeclaration(directiveName, schema);\n            if (decl) {\n                declaredDirectives[directiveName] = decl;\n            }\n        });\n        each(declaredDirectives, function (decl, name) {\n            if (!hasOwn.call(directiveVisitors, name)) {\n                // SchemaDirectiveVisitors.visitSchemaDirectives might be called\n                // multiple times with partial directiveVisitors maps, so it's not\n                // necessarily an error for directiveVisitors to be missing an\n                // implementation of a directive that was declared in the schema.\n                return;\n            }\n            var visitorClass = directiveVisitors[name];\n            each(decl.locations, function (loc) {\n                var visitorMethodName = directiveLocationToVisitorMethodName(loc);\n                if (SchemaVisitor.implementsVisitorMethod(visitorMethodName) &&\n                    !visitorClass.implementsVisitorMethod(visitorMethodName)) {\n                    // While visitor subclasses may implement extra visitor methods,\n                    // it's definitely a mistake if the GraphQLDirective declares itself\n                    // applicable to certain schema locations, and the visitor subclass\n                    // does not implement all the corresponding methods.\n                    throw new Error(\"SchemaDirectiveVisitor for @\" + name + \" must implement \" + visitorMethodName + \" method\");\n                }\n            });\n        });\n        return declaredDirectives;\n    };\n    return SchemaDirectiveVisitor;\n}(SchemaVisitor));\nexports.SchemaDirectiveVisitor = SchemaDirectiveVisitor;\n// Convert a string like \"FIELD_DEFINITION\" to \"visitFieldDefinition\".\nfunction directiveLocationToVisitorMethodName(loc) {\n    return 'visit' + loc.replace(/([^_]*)_?/g, function (wholeMatch, part) {\n        return part.charAt(0).toUpperCase() + part.slice(1).toLowerCase();\n    });\n}\nfunction each(arrayOrObject, callback) {\n    Object.keys(arrayOrObject).forEach(function (key) {\n        callback(arrayOrObject[key], key);\n    });\n}\n// A more powerful version of each that has the ability to replace or remove\n// array or object keys.\nfunction updateEachKey(arrayOrObject, \n// The callback can return nothing to leave the key untouched, null to remove\n// the key from the array or object, or a non-null V to replace the value.\ncallback) {\n    var deletedCount = 0;\n    Object.keys(arrayOrObject).forEach(function (key) {\n        var result = callback(arrayOrObject[key], key);\n        if (typeof result === 'undefined') {\n            return;\n        }\n        if (result === null) {\n            delete arrayOrObject[key];\n            deletedCount++;\n            return;\n        }\n        arrayOrObject[key] = result;\n    });\n    if (deletedCount > 0 && Array.isArray(arrayOrObject)) {\n        // Remove any holes from the array due to deleted elements.\n        arrayOrObject.splice(0).forEach(function (elem) {\n            arrayOrObject.push(elem);\n        });\n    }\n}\n// Similar to the graphql-js function of the same name, slightly simplified:\n// https://github.com/graphql/graphql-js/blob/master/src/utilities/valueFromASTUntyped.js\nfunction valueFromASTUntyped(valueNode) {\n    switch (valueNode.kind) {\n        case graphql_1.Kind.NULL:\n            return null;\n        case graphql_1.Kind.INT:\n            return parseInt(valueNode.value, 10);\n        case graphql_1.Kind.FLOAT:\n            return parseFloat(valueNode.value);\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.ENUM:\n        case graphql_1.Kind.BOOLEAN:\n            return valueNode.value;\n        case graphql_1.Kind.LIST:\n            return valueNode.values.map(valueFromASTUntyped);\n        case graphql_1.Kind.OBJECT:\n            var obj_1 = Object.create(null);\n            valueNode.fields.forEach(function (field) {\n                obj_1[field.name.value] = valueFromASTUntyped(field.value);\n            });\n            return obj_1;\n        /* istanbul ignore next */\n        default:\n            throw new Error('Unexpected value kind: ' + valueNode.kind);\n    }\n}\n//# sourceMappingURL=schemaVisitor.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar error_1 = require(\"graphql/error\");\nvar errors_1 = require(\"./errors\");\nvar getResponseKeyFromInfo_1 = require(\"./getResponseKeyFromInfo\");\n// Resolver that knows how to:\n// a) handle aliases for proxied schemas\n// b) handle errors from proxied schemas\nvar defaultMergedResolver = function (parent, args, context, info) {\n    if (!parent) {\n        return null;\n    }\n    var responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n    var errorResult = errors_1.getErrorsFromParent(parent, responseKey);\n    if (errorResult.kind === 'OWN') {\n        throw error_1.locatedError(new Error(errorResult.error.message), info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n    }\n    var result = parent[responseKey];\n    if (result == null) {\n        result = parent[info.fieldName];\n    }\n    // subscription result mapping\n    if (!result && parent.data && parent.data[responseKey]) {\n        result = parent.data[responseKey];\n    }\n    if (errorResult.errors) {\n        result = errors_1.annotateWithChildrenErrors(result, errorResult.errors);\n    }\n    return result;\n};\nexports.default = defaultMergedResolver;\n//# sourceMappingURL=defaultMergedResolver.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar transforms_1 = require(\"../transforms/transforms\");\nvar AddArgumentsAsVariables_1 = require(\"../transforms/AddArgumentsAsVariables\");\nvar FilterToSchema_1 = require(\"../transforms/FilterToSchema\");\nvar AddTypenameToAbstract_1 = require(\"../transforms/AddTypenameToAbstract\");\nvar CheckResultAndHandleErrors_1 = require(\"../transforms/CheckResultAndHandleErrors\");\nvar mapAsyncIterator_1 = require(\"./mapAsyncIterator\");\nvar ExpandAbstractTypes_1 = require(\"../transforms/ExpandAbstractTypes\");\nvar ReplaceFieldWithFragment_1 = require(\"../transforms/ReplaceFieldWithFragment\");\nvar ConvertEnumResponse_1 = require(\"../transforms/ConvertEnumResponse\");\nfunction delegateToSchema(options) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (options instanceof graphql_1.GraphQLSchema) {\n        throw new Error('Passing positional arguments to delegateToSchema is a deprecated. ' +\n            'Please pass named parameters instead.');\n    }\n    return delegateToSchemaImplementation(options);\n}\nexports.default = delegateToSchema;\nfunction delegateToSchemaImplementation(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var info, _a, args, operation, rawDocument, rawRequest, transforms, processedRequest, errors, _b, executionResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    info = options.info, _a = options.args, args = _a === void 0 ? {} : _a;\n                    operation = options.operation || info.operation.operation;\n                    rawDocument = createDocument(options.fieldName, operation, info.fieldNodes, Object.keys(info.fragments).map(function (fragmentName) { return info.fragments[fragmentName]; }), info.operation.variableDefinitions, info.operation.name);\n                    rawRequest = {\n                        document: rawDocument,\n                        variables: info.variableValues,\n                    };\n                    transforms = __spreadArrays((options.transforms || []), [\n                        new ExpandAbstractTypes_1.default(info.schema, options.schema),\n                    ]);\n                    if (info.mergeInfo && info.mergeInfo.fragments) {\n                        transforms.push(new ReplaceFieldWithFragment_1.default(options.schema, info.mergeInfo.fragments));\n                    }\n                    transforms = transforms.concat([\n                        new AddArgumentsAsVariables_1.default(options.schema, args),\n                        new FilterToSchema_1.default(options.schema),\n                        new AddTypenameToAbstract_1.default(options.schema),\n                        new CheckResultAndHandleErrors_1.default(info, options.fieldName),\n                    ]);\n                    if (graphql_1.isEnumType(options.info.returnType)) {\n                        transforms = transforms.concat(new ConvertEnumResponse_1.default(options.info.returnType));\n                    }\n                    processedRequest = transforms_1.applyRequestTransforms(rawRequest, transforms);\n                    if (!options.skipValidation) {\n                        errors = graphql_1.validate(options.schema, processedRequest.document);\n                        if (errors.length > 0) {\n                            throw errors;\n                        }\n                    }\n                    if (!(operation === 'query' || operation === 'mutation')) return [3 /*break*/, 2];\n                    _b = transforms_1.applyResultTransforms;\n                    return [4 /*yield*/, graphql_1.execute(options.schema, processedRequest.document, info.rootValue, options.context, processedRequest.variables)];\n                case 1: return [2 /*return*/, _b.apply(void 0, [_c.sent(),\n                        transforms])];\n                case 2:\n                    if (!(operation === 'subscription')) return [3 /*break*/, 4];\n                    return [4 /*yield*/, graphql_1.subscribe(options.schema, processedRequest.document, info.rootValue, options.context, processedRequest.variables)];\n                case 3:\n                    executionResult = (_c.sent());\n                    // \"subscribe\" to the subscription result and map the result through the transforms\n                    return [2 /*return*/, mapAsyncIterator_1.default(executionResult, function (result) {\n                            var _a;\n                            var transformedResult = transforms_1.applyResultTransforms(result, transforms);\n                            var subscriptionKey = Object.keys(result.data)[0];\n                            // for some reason the returned transformedResult needs to be nested inside the root subscription field\n                            // does not work otherwise...\n                            return _a = {},\n                                _a[subscriptionKey] = transformedResult,\n                                _a;\n                        })];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction createDocument(targetField, targetOperation, originalSelections, fragments, variables, operationName) {\n    var selections = [];\n    var args = [];\n    originalSelections.forEach(function (field) {\n        var fieldSelections = field.selectionSet\n            ? field.selectionSet.selections\n            : [];\n        selections = selections.concat(fieldSelections);\n        args = args.concat(field.arguments || []);\n    });\n    var selectionSet = null;\n    if (selections.length > 0) {\n        selectionSet = {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: selections,\n        };\n    }\n    var rootField = {\n        kind: graphql_1.Kind.FIELD,\n        alias: null,\n        arguments: args,\n        selectionSet: selectionSet,\n        name: {\n            kind: graphql_1.Kind.NAME,\n            value: targetField,\n        },\n    };\n    var rootSelectionSet = {\n        kind: graphql_1.Kind.SELECTION_SET,\n        selections: [rootField],\n    };\n    var operationDefinition = {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: targetOperation,\n        variableDefinitions: variables,\n        selectionSet: rootSelectionSet,\n        name: operationName,\n    };\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: __spreadArrays([operationDefinition], fragments),\n    };\n}\n//# sourceMappingURL=delegateToSchema.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar error_1 = require(\"graphql/error\");\nvar getResponseKeyFromInfo_1 = require(\"./getResponseKeyFromInfo\");\nif ((typeof global !== 'undefined' && 'Symbol' in global) ||\n    (typeof window !== 'undefined' && 'Symbol' in window)) {\n    exports.ERROR_SYMBOL = Symbol('subSchemaErrors');\n}\nelse {\n    exports.ERROR_SYMBOL = '@@__subSchemaErrors';\n}\nfunction annotateWithChildrenErrors(object, childrenErrors) {\n    var _a;\n    if (!childrenErrors || childrenErrors.length === 0) {\n        // Nothing to see here, move along\n        return object;\n    }\n    if (Array.isArray(object)) {\n        var byIndex_1 = {};\n        childrenErrors.forEach(function (error) {\n            if (!error.path) {\n                return;\n            }\n            var index = error.path[1];\n            var current = byIndex_1[index] || [];\n            current.push(__assign(__assign({}, error), { path: error.path.slice(1) }));\n            byIndex_1[index] = current;\n        });\n        return object.map(function (item, index) { return annotateWithChildrenErrors(item, byIndex_1[index]); });\n    }\n    return __assign(__assign({}, object), (_a = {}, _a[exports.ERROR_SYMBOL] = childrenErrors.map(function (error) { return (__assign(__assign({}, error), (error.path ? { path: error.path.slice(1) } : {}))); }), _a));\n}\nexports.annotateWithChildrenErrors = annotateWithChildrenErrors;\nfunction getErrorsFromParent(object, fieldName) {\n    var errors = (object && object[exports.ERROR_SYMBOL]) || [];\n    var childrenErrors = [];\n    for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n        var error = errors_1[_i];\n        if (!error.path || (error.path.length === 1 && error.path[0] === fieldName)) {\n            return {\n                kind: 'OWN',\n                error: error\n            };\n        }\n        else if (error.path[0] === fieldName) {\n            childrenErrors.push(error);\n        }\n    }\n    return {\n        kind: 'CHILDREN',\n        errors: childrenErrors\n    };\n}\nexports.getErrorsFromParent = getErrorsFromParent;\nvar CombinedError = /** @class */ (function (_super) {\n    __extends(CombinedError, _super);\n    function CombinedError(message, errors) {\n        var _this = _super.call(this, message) || this;\n        _this.errors = errors;\n        return _this;\n    }\n    return CombinedError;\n}(Error));\nfunction checkResultAndHandleErrors(result, info, responseKey) {\n    if (!responseKey) {\n        responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n    }\n    if (result.errors && (!result.data || result.data[responseKey] == null)) {\n        // apollo-link-http & http-link-dataloader need the\n        // result property to be passed through for better error handling.\n        // If there is only one error, which contains a result property, pass the error through\n        var newError = result.errors.length === 1 && hasResult(result.errors[0])\n            ? result.errors[0]\n            : new CombinedError(concatErrors(result.errors), result.errors);\n        throw error_1.locatedError(newError, info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n    }\n    var resultObject = result.data[responseKey];\n    if (result.errors) {\n        resultObject = annotateWithChildrenErrors(resultObject, result.errors);\n    }\n    return resultObject;\n}\nexports.checkResultAndHandleErrors = checkResultAndHandleErrors;\nfunction concatErrors(errors) {\n    return errors.map(function (error) { return error.message; }).join('\\n');\n}\nfunction hasResult(error) {\n    return error.result || error.extensions || (error.originalError && error.originalError.result);\n}\n//# sourceMappingURL=errors.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias ? info.fieldNodes[0].alias.value : info.fieldName;\n}\nexports.getResponseKeyFromInfo = getResponseKeyFromInfo;\n//# sourceMappingURL=getResponseKeyFromInfo.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar makeRemoteExecutableSchema_1 = require(\"./makeRemoteExecutableSchema\");\nexports.makeRemoteExecutableSchema = makeRemoteExecutableSchema_1.default;\nexports.defaultCreateRemoteResolver = makeRemoteExecutableSchema_1.createResolver;\nvar introspectSchema_1 = require(\"./introspectSchema\");\nexports.introspectSchema = introspectSchema_1.default;\nvar mergeSchemas_1 = require(\"./mergeSchemas\");\nexports.mergeSchemas = mergeSchemas_1.default;\nvar delegateToSchema_1 = require(\"./delegateToSchema\");\nexports.delegateToSchema = delegateToSchema_1.default;\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nexports.defaultMergedResolver = defaultMergedResolver_1.default;\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar utilities_1 = require(\"graphql/utilities\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar parsedIntrospectionQuery = graphql_1.parse(utilities_1.getIntrospectionQuery());\nfunction introspectSchema(fetcher, linkContext) {\n    return __awaiter(this, void 0, void 0, function () {\n        var introspectionResult, schema;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    // Convert link to fetcher\n                    if (fetcher.request) {\n                        fetcher = linkToFetcher_1.default(fetcher);\n                    }\n                    return [4 /*yield*/, fetcher({\n                            query: parsedIntrospectionQuery,\n                            context: linkContext,\n                        })];\n                case 1:\n                    introspectionResult = _a.sent();\n                    if ((introspectionResult.errors && introspectionResult.errors.length) ||\n                        !introspectionResult.data.__schema) {\n                        throw introspectionResult.errors;\n                    }\n                    else {\n                        schema = graphql_1.buildClientSchema(introspectionResult.data);\n                        return [2 /*return*/, schema];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.default = introspectSchema;\n//# sourceMappingURL=introspectSchema.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_link_1 = require(\"apollo-link\");\nvar apollo_link_2 = require(\"apollo-link\");\nexports.execute = apollo_link_2.execute;\nfunction linkToFetcher(link) {\n    return function (fetcherOperation) {\n        return apollo_link_1.makePromise(apollo_link_1.execute(link, fetcherOperation));\n    };\n}\nexports.default = linkToFetcher;\n//# sourceMappingURL=linkToFetcher.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nvar errors_1 = require(\"./errors\");\nvar observableToAsyncIterable_1 = require(\"./observableToAsyncIterable\");\nfunction makeRemoteExecutableSchema(_a) {\n    var _b;\n    var schema = _a.schema, link = _a.link, fetcher = _a.fetcher, _c = _a.createResolver, customCreateResolver = _c === void 0 ? createResolver : _c, buildSchemaOptions = _a.buildSchemaOptions, _d = _a.printSchemaOptions, printSchemaOptions = _d === void 0 ? { commentDescriptions: true } : _d;\n    if (!fetcher && link) {\n        fetcher = linkToFetcher_1.default(link);\n    }\n    var typeDefs;\n    if (typeof schema === 'string') {\n        typeDefs = schema;\n        schema = graphql_1.buildSchema(typeDefs, buildSchemaOptions);\n    }\n    else {\n        typeDefs = graphql_1.printSchema(schema, printSchemaOptions);\n    }\n    // prepare query resolvers\n    var queryResolvers = {};\n    var queryType = schema.getQueryType();\n    var queries = queryType.getFields();\n    Object.keys(queries).forEach(function (key) {\n        queryResolvers[key] = customCreateResolver(fetcher);\n    });\n    // prepare mutation resolvers\n    var mutationResolvers = {};\n    var mutationType = schema.getMutationType();\n    if (mutationType) {\n        var mutations = mutationType.getFields();\n        Object.keys(mutations).forEach(function (key) {\n            mutationResolvers[key] = customCreateResolver(fetcher);\n        });\n    }\n    // prepare subscription resolvers\n    var subscriptionResolvers = {};\n    var subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        var subscriptions = subscriptionType.getFields();\n        Object.keys(subscriptions).forEach(function (key) {\n            subscriptionResolvers[key] = {\n                subscribe: createSubscriptionResolver(key, link)\n            };\n        });\n    }\n    // merge resolvers into resolver map\n    var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n    if (!isEmptyObject_1.default(mutationResolvers)) {\n        resolvers[mutationType.name] = mutationResolvers;\n    }\n    if (!isEmptyObject_1.default(subscriptionResolvers)) {\n        resolvers[subscriptionType.name] = subscriptionResolvers;\n    }\n    // add missing abstract resolvers (scalar, unions, interfaces)\n    var typeMap = schema.getTypeMap();\n    var types = Object.keys(typeMap).map(function (name) { return typeMap[name]; });\n    var _loop_1 = function (type) {\n        if (type instanceof graphql_1.GraphQLInterfaceType || type instanceof graphql_1.GraphQLUnionType) {\n            resolvers[type.name] = {\n                __resolveType: function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                }\n            };\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            if (!(type === graphql_1.GraphQLID ||\n                type === graphql_1.GraphQLString ||\n                type === graphql_1.GraphQLFloat ||\n                type === graphql_1.GraphQLBoolean ||\n                type === graphql_1.GraphQLInt)) {\n                resolvers[type.name] = schemaRecreation_1.recreateType(type, function (name) { return null; }, false);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType &&\n            type.name.slice(0, 2) !== '__' &&\n            type !== queryType &&\n            type !== mutationType &&\n            type !== subscriptionType) {\n            var resolver_1 = {};\n            Object.keys(type.getFields()).forEach(function (field) {\n                resolver_1[field] = defaultMergedResolver_1.default;\n            });\n            resolvers[type.name] = resolver_1;\n        }\n    };\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        _loop_1(type);\n    }\n    return makeExecutableSchema_1.makeExecutableSchema({\n        typeDefs: typeDefs,\n        resolvers: resolvers\n    });\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n    var _this = this;\n    return function (root, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n        var fragments, document, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n                    document = {\n                        kind: graphql_1.Kind.DOCUMENT,\n                        definitions: __spreadArrays([info.operation], fragments)\n                    };\n                    return [4 /*yield*/, fetcher({\n                            query: document,\n                            variables: info.variableValues,\n                            context: { graphqlContext: context }\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n            }\n        });\n    }); };\n}\nexports.createResolver = createResolver;\nfunction createSubscriptionResolver(name, link) {\n    return function (root, args, context, info) {\n        var fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n        var document = {\n            kind: graphql_1.Kind.DOCUMENT,\n            definitions: __spreadArrays([info.operation], fragments)\n        };\n        var operation = {\n            query: document,\n            variables: info.variableValues,\n            context: { graphqlContext: context }\n        };\n        var observable = linkToFetcher_1.execute(link, operation);\n        return observableToAsyncIterable_1.observableToAsyncIterable(observable);\n    };\n}\n//# sourceMappingURL=makeRemoteExecutableSchema.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar iterall_1 = require(\"iterall\");\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    var _a;\n    var $return;\n    var abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = function (error) {\n            var rethrow = function () { return Promise.reject(error); };\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done\n            ? result\n            : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    var mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        var reject_1 = rejectCallback;\n        mapReject = function (error) {\n            return asyncMapValue(error, reject_1).then(iteratorResult, abruptClose);\n        };\n    }\n    return _a = {\n            next: function () {\n                return iterator.next().then(mapResult, mapReject);\n            },\n            return: function () {\n                return $return\n                    ? $return.call(iterator).then(mapResult, mapReject)\n                    : Promise.resolve({ value: undefined, done: true });\n            },\n            throw: function (error) {\n                if (typeof iterator.throw === 'function') {\n                    return iterator.throw(error).then(mapResult, mapReject);\n                }\n                return Promise.reject(error).catch(abruptClose);\n            }\n        },\n        _a[iterall_1.$$asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\nexports.default = mapAsyncIterator;\nfunction asyncMapValue(value, callback) {\n    return new Promise(function (resolve) { return resolve(callback(value)); });\n}\nfunction iteratorResult(value) {\n    return { value: value, done: false };\n}\n//# sourceMappingURL=mapAsyncIterator.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar delegateToSchema_1 = require(\"./delegateToSchema\");\nvar typeFromAST_1 = require(\"./typeFromAST\");\nvar transforms_1 = require(\"../transforms\");\nvar mergeDeep_1 = require(\"../mergeDeep\");\nvar schemaVisitor_1 = require(\"../schemaVisitor\");\nfunction mergeSchemas(_a) {\n    var schemas = _a.schemas, onTypeConflict = _a.onTypeConflict, resolvers = _a.resolvers, schemaDirectives = _a.schemaDirectives, inheritResolversFromInterfaces = _a.inheritResolversFromInterfaces, mergeDirectives = _a.mergeDirectives;\n    return mergeSchemasImplementation({\n        schemas: schemas,\n        resolvers: resolvers,\n        schemaDirectives: schemaDirectives,\n        inheritResolversFromInterfaces: inheritResolversFromInterfaces,\n        mergeDirectives: mergeDirectives,\n    });\n}\nexports.default = mergeSchemas;\nfunction mergeSchemasImplementation(_a) {\n    var schemas = _a.schemas, resolvers = _a.resolvers, schemaDirectives = _a.schemaDirectives, inheritResolversFromInterfaces = _a.inheritResolversFromInterfaces, mergeDirectives = _a.mergeDirectives;\n    var allSchemas = [];\n    var typeCandidates = {};\n    var types = {};\n    var extensions = [];\n    var directives = [];\n    var fragments = [];\n    var resolveType = schemaRecreation_1.createResolveType(function (name) {\n        if (types[name] === undefined) {\n            throw new Error(\"Can't find type \" + name + \".\");\n        }\n        return types[name];\n    });\n    schemas.forEach(function (schema) {\n        if (schema instanceof graphql_1.GraphQLSchema) {\n            allSchemas.push(schema);\n            var queryType_1 = schema.getQueryType();\n            var mutationType_1 = schema.getMutationType();\n            var subscriptionType_1 = schema.getSubscriptionType();\n            if (queryType_1) {\n                addTypeCandidate(typeCandidates, 'Query', {\n                    schema: schema,\n                    type: queryType_1,\n                });\n            }\n            if (mutationType_1) {\n                addTypeCandidate(typeCandidates, 'Mutation', {\n                    schema: schema,\n                    type: mutationType_1,\n                });\n            }\n            if (subscriptionType_1) {\n                addTypeCandidate(typeCandidates, 'Subscription', {\n                    schema: schema,\n                    type: subscriptionType_1,\n                });\n            }\n            if (mergeDirectives) {\n                var directiveInstances = schema.getDirectives();\n                directiveInstances.forEach(function (directive) {\n                    directives.push(directive);\n                });\n            }\n            var typeMap_1 = schema.getTypeMap();\n            Object.keys(typeMap_1).forEach(function (typeName) {\n                var type = typeMap_1[typeName];\n                if (graphql_1.isNamedType(type) &&\n                    graphql_1.getNamedType(type).name.slice(0, 2) !== '__' &&\n                    type !== queryType_1 &&\n                    type !== mutationType_1 &&\n                    type !== subscriptionType_1) {\n                    addTypeCandidate(typeCandidates, type.name, {\n                        schema: schema,\n                        type: type,\n                    });\n                }\n            });\n        }\n        else if (typeof schema === 'string' ||\n            (schema && schema.kind === graphql_1.Kind.DOCUMENT)) {\n            var parsedSchemaDocument = typeof schema === 'string' ? graphql_1.parse(schema) : schema;\n            parsedSchemaDocument.definitions.forEach(function (def) {\n                var type = typeFromAST_1.default(def);\n                if (type instanceof graphql_1.GraphQLDirective && mergeDirectives) {\n                    directives.push(type);\n                }\n                else if (type && !(type instanceof graphql_1.GraphQLDirective)) {\n                    addTypeCandidate(typeCandidates, type.name, {\n                        type: type,\n                    });\n                }\n            });\n            var extensionsDocument = makeExecutableSchema_1.extractExtensionDefinitions(parsedSchemaDocument);\n            if (extensionsDocument.definitions.length > 0) {\n                extensions.push(extensionsDocument);\n            }\n        }\n        else if (Array.isArray(schema)) {\n            schema.forEach(function (type) {\n                addTypeCandidate(typeCandidates, type.name, {\n                    type: type,\n                });\n            });\n        }\n        else {\n            throw new Error(\"Invalid schema passed\");\n        }\n    });\n    var mergeInfo = createMergeInfo(allSchemas, fragments);\n    if (!resolvers) {\n        resolvers = {};\n    }\n    else if (typeof resolvers === 'function') {\n        console.warn('Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead.');\n        resolvers = resolvers(mergeInfo);\n    }\n    else if (Array.isArray(resolvers)) {\n        resolvers = resolvers.reduce(function (left, right) {\n            if (typeof right === 'function') {\n                console.warn('Passing functions as resolver parameter is deprecated. Use `info.mergeInfo` instead.');\n                right = right(mergeInfo);\n            }\n            return mergeDeep_1.default(left, right);\n        }, {});\n    }\n    var generatedResolvers = {};\n    Object.keys(typeCandidates).forEach(function (typeName) {\n        var resultType = defaultVisitType(typeName, typeCandidates[typeName]);\n        if (resultType === null) {\n            types[typeName] = null;\n        }\n        else {\n            var type = void 0;\n            var typeResolvers = void 0;\n            if (graphql_1.isNamedType(resultType)) {\n                type = resultType;\n            }\n            else if (resultType.type) {\n                type = resultType.type;\n                typeResolvers = resultType.resolvers;\n            }\n            else {\n                throw new Error(\"Invalid visitType result for type \" + typeName);\n            }\n            types[typeName] = schemaRecreation_1.recreateType(type, resolveType, false);\n            if (typeResolvers) {\n                generatedResolvers[typeName] = typeResolvers;\n            }\n        }\n    });\n    var mergedSchema = new graphql_1.GraphQLSchema({\n        query: types.Query,\n        mutation: types.Mutation,\n        subscription: types.Subscription,\n        types: Object.keys(types).map(function (key) { return types[key]; }),\n        directives: directives.map(function (directive) { return schemaRecreation_1.recreateDirective(directive, resolveType); })\n    });\n    extensions.forEach(function (extension) {\n        mergedSchema = graphql_1.extendSchema(mergedSchema, extension, {\n            commentDescriptions: true,\n        });\n    });\n    if (!resolvers) {\n        resolvers = {};\n    }\n    else if (Array.isArray(resolvers)) {\n        resolvers = resolvers.reduce(mergeDeep_1.default, {});\n    }\n    Object.keys(resolvers).forEach(function (typeName) {\n        var type = resolvers[typeName];\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return;\n        }\n        Object.keys(type).forEach(function (fieldName) {\n            var field = type[fieldName];\n            if (field.fragment) {\n                fragments.push({\n                    field: fieldName,\n                    fragment: field.fragment,\n                });\n            }\n        });\n    });\n    mergedSchema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n        schema: mergedSchema,\n        resolvers: mergeDeep_1.default(generatedResolvers, resolvers),\n        inheritResolversFromInterfaces: inheritResolversFromInterfaces\n    });\n    forEachField(mergedSchema, function (field) {\n        if (field.resolve) {\n            var fieldResolver_1 = field.resolve;\n            field.resolve = function (parent, args, context, info) {\n                var newInfo = __assign(__assign({}, info), { mergeInfo: mergeInfo });\n                return fieldResolver_1(parent, args, context, newInfo);\n            };\n        }\n        if (field.subscribe) {\n            var fieldResolver_2 = field.subscribe;\n            field.subscribe = function (parent, args, context, info) {\n                var newInfo = __assign(__assign({}, info), { mergeInfo: mergeInfo });\n                return fieldResolver_2(parent, args, context, newInfo);\n            };\n        }\n    });\n    if (schemaDirectives) {\n        schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(mergedSchema, schemaDirectives);\n    }\n    return mergedSchema;\n}\nfunction createMergeInfo(allSchemas, fragments) {\n    return {\n        delegate: function (operation, fieldName, args, context, info, transforms) {\n            console.warn('`mergeInfo.delegate` is deprecated. ' +\n                'Use `mergeInfo.delegateToSchema and pass explicit schema instances.');\n            var schema = guessSchemaByRootField(allSchemas, operation, fieldName);\n            var expandTransforms = new transforms_1.ExpandAbstractTypes(info.schema, schema);\n            var fragmentTransform = new transforms_1.ReplaceFieldWithFragment(schema, fragments);\n            return delegateToSchema_1.default({\n                schema: schema,\n                operation: operation,\n                fieldName: fieldName,\n                args: args,\n                context: context,\n                info: info,\n                transforms: __spreadArrays((transforms || []), [\n                    expandTransforms,\n                    fragmentTransform,\n                ]),\n            });\n        },\n        delegateToSchema: function (options) {\n            return delegateToSchema_1.default(__assign(__assign({}, options), { transforms: options.transforms }));\n        },\n        fragments: fragments\n    };\n}\nfunction guessSchemaByRootField(schemas, operation, fieldName) {\n    for (var _i = 0, schemas_1 = schemas; _i < schemas_1.length; _i++) {\n        var schema = schemas_1[_i];\n        var rootObject = void 0;\n        if (operation === 'subscription') {\n            rootObject = schema.getSubscriptionType();\n        }\n        else if (operation === 'mutation') {\n            rootObject = schema.getMutationType();\n        }\n        else {\n            rootObject = schema.getQueryType();\n        }\n        if (rootObject) {\n            var fields = rootObject.getFields();\n            if (fields[fieldName]) {\n                return schema;\n            }\n        }\n    }\n    throw new Error(\"Could not find subschema with field `\" + operation + \".\" + fieldName + \"`\");\n}\nfunction createDelegatingResolver(schema, operation, fieldName) {\n    return function (root, args, context, info) {\n        return info.mergeInfo.delegateToSchema({\n            schema: schema,\n            operation: operation,\n            fieldName: fieldName,\n            args: args,\n            context: context,\n            info: info,\n        });\n    };\n}\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\nfunction addTypeCandidate(typeCandidates, name, typeCandidate) {\n    if (!typeCandidates[name]) {\n        typeCandidates[name] = [];\n    }\n    typeCandidates[name].push(typeCandidate);\n}\nfunction defaultVisitType(name, candidates, candidateSelector) {\n    if (!candidateSelector) {\n        candidateSelector = function (cands) { return cands[cands.length - 1]; };\n    }\n    var resolveType = schemaRecreation_1.createResolveType(function (_, type) { return type; });\n    if (name === 'Query' || name === 'Mutation' || name === 'Subscription') {\n        var fields_2 = {};\n        var operationName_1;\n        switch (name) {\n            case 'Query':\n                operationName_1 = 'query';\n                break;\n            case 'Mutation':\n                operationName_1 = 'mutation';\n                break;\n            case 'Subscription':\n                operationName_1 = 'subscription';\n                break;\n            default:\n                break;\n        }\n        var resolvers_1 = {};\n        var resolverKey_1 = operationName_1 === 'subscription' ? 'subscribe' : 'resolve';\n        candidates.forEach(function (_a) {\n            var candidateType = _a.type, schema = _a.schema;\n            var candidateFields = candidateType.getFields();\n            fields_2 = __assign(__assign({}, fields_2), candidateFields);\n            Object.keys(candidateFields).forEach(function (fieldName) {\n                var _a;\n                resolvers_1[fieldName] = (_a = {},\n                    _a[resolverKey_1] = createDelegatingResolver(schema, operationName_1, fieldName),\n                    _a);\n            });\n        });\n        var type = new graphql_1.GraphQLObjectType({\n            name: name,\n            fields: schemaRecreation_1.fieldMapToFieldConfigMap(fields_2, resolveType, false),\n        });\n        return {\n            type: type,\n            resolvers: resolvers_1,\n        };\n    }\n    else {\n        var candidate = candidateSelector(candidates);\n        return candidate.type;\n    }\n}\n//# sourceMappingURL=mergeSchemas.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterall_1 = require(\"iterall\");\nfunction observableToAsyncIterable(observable) {\n    var _a;\n    var pullQueue = [];\n    var pushQueue = [];\n    var listening = true;\n    var pushValue = function (_a) {\n        var data = _a.data;\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: data, done: false });\n        }\n        else {\n            pushQueue.push({ value: data });\n        }\n    };\n    var pushError = function (error) {\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] } });\n        }\n    };\n    var pullValue = function () {\n        return new Promise(function (resolve) {\n            if (pushQueue.length !== 0) {\n                var element = pushQueue.shift();\n                // either {value: {errors: [...]}} or {value: ...}\n                resolve(__assign(__assign({}, element), { done: false }));\n            }\n            else {\n                pullQueue.push(resolve);\n            }\n        });\n    };\n    var subscription = observable.subscribe({\n        next: function (value) {\n            pushValue(value);\n        },\n        error: function (err) {\n            pushError(err);\n        },\n    });\n    var emptyQueue = function () {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            pullQueue.forEach(function (resolve) { return resolve({ value: undefined, done: true }); });\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return _a = {\n            next: function () {\n                return __awaiter(this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        return [2 /*return*/, listening ? pullValue() : this.return()];\n                    });\n                });\n            },\n            return: function () {\n                emptyQueue();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n            throw: function (error) {\n                emptyQueue();\n                return Promise.reject(error);\n            }\n        },\n        _a[iterall_1.$$asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\nexports.observableToAsyncIterable = observableToAsyncIterable;\n//# sourceMappingURL=observableToAsyncIterable.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction resolveFromParentTypename(parent, schema) {\n    var parentTypename = parent['__typename'];\n    if (!parentTypename) {\n        throw new Error('Did not fetch typename for object, unable to resolve interface.');\n    }\n    var resolvedType = schema.getType(parentTypename);\n    if (!(resolvedType instanceof graphql_1.GraphQLObjectType)) {\n        throw new Error('__typename did not match an object type: ' + parentTypename);\n    }\n    return resolvedType;\n}\nexports.default = resolveFromParentTypename;\n//# sourceMappingURL=resolveFromParentTypename.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar delegateToSchema_1 = require(\"./delegateToSchema\");\nfunction generateProxyingResolvers(targetSchema, transforms, mapping) {\n    var result = {};\n    Object.keys(mapping).forEach(function (name) {\n        result[name] = {};\n        var innerMapping = mapping[name];\n        Object.keys(innerMapping).forEach(function (from) {\n            var _a;\n            var to = innerMapping[from];\n            var resolverType = to.operation === 'subscription' ? 'subscribe' : 'resolve';\n            result[name][from] = (_a = {},\n                _a[resolverType] = createProxyingResolver(targetSchema, to.operation, to.name, transforms),\n                _a);\n        });\n    });\n    return result;\n}\nexports.generateProxyingResolvers = generateProxyingResolvers;\nfunction generateSimpleMapping(targetSchema) {\n    var query = targetSchema.getQueryType();\n    var mutation = targetSchema.getMutationType();\n    var subscription = targetSchema.getSubscriptionType();\n    var result = {};\n    if (query) {\n        result[query.name] = generateMappingFromObjectType(query, 'query');\n    }\n    if (mutation) {\n        result[mutation.name] = generateMappingFromObjectType(mutation, 'mutation');\n    }\n    if (subscription) {\n        result[subscription.name] = generateMappingFromObjectType(subscription, 'subscription');\n    }\n    return result;\n}\nexports.generateSimpleMapping = generateSimpleMapping;\nfunction generateMappingFromObjectType(type, operation) {\n    var result = {};\n    var fields = type.getFields();\n    Object.keys(fields).forEach(function (fieldName) {\n        result[fieldName] = {\n            name: fieldName,\n            operation: operation,\n        };\n    });\n    return result;\n}\nexports.generateMappingFromObjectType = generateMappingFromObjectType;\nfunction createProxyingResolver(schema, operation, fieldName, transforms) {\n    return function (parent, args, context, info) { return delegateToSchema_1.default({\n        schema: schema,\n        operation: operation,\n        fieldName: fieldName,\n        args: {},\n        context: context,\n        info: info,\n        transforms: transforms,\n    }); };\n}\n//# sourceMappingURL=resolvers.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar isSpecifiedScalarType_1 = require(\"../isSpecifiedScalarType\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nfunction recreateType(type, resolveType, keepResolvers) {\n    if (type instanceof graphql_1.GraphQLObjectType) {\n        var fields_1 = type.getFields();\n        var interfaces_1 = type.getInterfaces();\n        return new graphql_1.GraphQLObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            isTypeOf: keepResolvers ? type.isTypeOf : undefined,\n            fields: function () {\n                return fieldMapToFieldConfigMap(fields_1, resolveType, keepResolvers);\n            },\n            interfaces: function () { return interfaces_1.map(function (iface) { return resolveType(iface); }); },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLInterfaceType) {\n        var fields_2 = type.getFields();\n        return new graphql_1.GraphQLInterfaceType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: function () {\n                return fieldMapToFieldConfigMap(fields_2, resolveType, keepResolvers);\n            },\n            resolveType: keepResolvers\n                ? type.resolveType\n                : function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLUnionType) {\n        return new graphql_1.GraphQLUnionType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            types: function () { return type.getTypes().map(function (unionMember) { return resolveType(unionMember); }); },\n            resolveType: keepResolvers\n                ? type.resolveType\n                : function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLInputObjectType) {\n        return new graphql_1.GraphQLInputObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: function () {\n                return inputFieldMapToFieldConfigMap(type.getFields(), resolveType);\n            },\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLEnumType) {\n        var values = type.getValues();\n        var newValues_1 = {};\n        values.forEach(function (value) {\n            newValues_1[value.name] = {\n                value: value.value,\n                deprecationReason: value.deprecationReason,\n                description: value.description,\n                astNode: value.astNode,\n            };\n        });\n        return new graphql_1.GraphQLEnumType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            values: newValues_1,\n        });\n    }\n    else if (type instanceof graphql_1.GraphQLScalarType) {\n        if (keepResolvers || isSpecifiedScalarType_1.default(type)) {\n            return type;\n        }\n        else {\n            return new graphql_1.GraphQLScalarType({\n                name: type.name,\n                description: type.description,\n                astNode: type.astNode,\n                serialize: function (value) {\n                    return value;\n                },\n                parseValue: function (value) {\n                    return value;\n                },\n                parseLiteral: function (ast) {\n                    return parseLiteral(ast);\n                },\n            });\n        }\n    }\n    else {\n        throw new Error(\"Invalid type \" + type);\n    }\n}\nexports.recreateType = recreateType;\nfunction recreateDirective(directive, resolveType) {\n    return new graphql_1.GraphQLDirective({\n        name: directive.name,\n        description: directive.description,\n        locations: directive.locations,\n        args: argsToFieldConfigArgumentMap(directive.args, resolveType),\n        astNode: directive.astNode,\n    });\n}\nexports.recreateDirective = recreateDirective;\nfunction parseLiteral(ast) {\n    switch (ast.kind) {\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.BOOLEAN: {\n            return ast.value;\n        }\n        case graphql_1.Kind.INT:\n        case graphql_1.Kind.FLOAT: {\n            return parseFloat(ast.value);\n        }\n        case graphql_1.Kind.OBJECT: {\n            var value_1 = Object.create(null);\n            ast.fields.forEach(function (field) {\n                value_1[field.name.value] = parseLiteral(field.value);\n            });\n            return value_1;\n        }\n        case graphql_1.Kind.LIST: {\n            return ast.values.map(parseLiteral);\n        }\n        default:\n            return null;\n    }\n}\nfunction fieldMapToFieldConfigMap(fields, resolveType, keepResolvers) {\n    var result = {};\n    Object.keys(fields).forEach(function (name) {\n        var field = fields[name];\n        var type = resolveType(field.type);\n        if (type !== null) {\n            result[name] = fieldToFieldConfig(fields[name], resolveType, keepResolvers);\n        }\n    });\n    return result;\n}\nexports.fieldMapToFieldConfigMap = fieldMapToFieldConfigMap;\nfunction createResolveType(getType) {\n    var resolveType = function (type) {\n        if (type instanceof graphql_1.GraphQLList) {\n            var innerType = resolveType(type.ofType);\n            if (innerType === null) {\n                return null;\n            }\n            else {\n                return new graphql_1.GraphQLList(innerType);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            var innerType = resolveType(type.ofType);\n            if (innerType === null) {\n                return null;\n            }\n            else {\n                return new graphql_1.GraphQLNonNull(innerType);\n            }\n        }\n        else if (graphql_1.isNamedType(type)) {\n            var typeName = graphql_1.getNamedType(type).name;\n            switch (typeName) {\n                case graphql_1.GraphQLInt.name:\n                    return graphql_1.GraphQLInt;\n                case graphql_1.GraphQLFloat.name:\n                    return graphql_1.GraphQLFloat;\n                case graphql_1.GraphQLString.name:\n                    return graphql_1.GraphQLString;\n                case graphql_1.GraphQLBoolean.name:\n                    return graphql_1.GraphQLBoolean;\n                case graphql_1.GraphQLID.name:\n                    return graphql_1.GraphQLID;\n                default:\n                    return getType(typeName, type);\n            }\n        }\n        else {\n            return type;\n        }\n    };\n    return resolveType;\n}\nexports.createResolveType = createResolveType;\nfunction fieldToFieldConfig(field, resolveType, keepResolvers) {\n    return {\n        type: resolveType(field.type),\n        args: argsToFieldConfigArgumentMap(field.args, resolveType),\n        resolve: keepResolvers ? field.resolve : defaultMergedResolver_1.default,\n        subscribe: keepResolvers ? field.subscribe : null,\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        astNode: field.astNode,\n    };\n}\nexports.fieldToFieldConfig = fieldToFieldConfig;\nfunction argsToFieldConfigArgumentMap(args, resolveType) {\n    var result = {};\n    args.forEach(function (arg) {\n        var newArg = argumentToArgumentConfig(arg, resolveType);\n        if (newArg) {\n            result[newArg[0]] = newArg[1];\n        }\n    });\n    return result;\n}\nexports.argsToFieldConfigArgumentMap = argsToFieldConfigArgumentMap;\nfunction argumentToArgumentConfig(argument, resolveType) {\n    var type = resolveType(argument.type);\n    if (type === null) {\n        return null;\n    }\n    else {\n        return [\n            argument.name,\n            {\n                type: type,\n                defaultValue: argument.defaultValue,\n                description: argument.description,\n            },\n        ];\n    }\n}\nexports.argumentToArgumentConfig = argumentToArgumentConfig;\nfunction inputFieldMapToFieldConfigMap(fields, resolveType) {\n    var result = {};\n    Object.keys(fields).forEach(function (name) {\n        var field = fields[name];\n        var type = resolveType(field.type);\n        if (type !== null) {\n            result[name] = inputFieldToFieldConfig(fields[name], resolveType);\n        }\n    });\n    return result;\n}\nexports.inputFieldMapToFieldConfigMap = inputFieldMapToFieldConfigMap;\nfunction inputFieldToFieldConfig(field, resolveType) {\n    return {\n        type: resolveType(field.type),\n        defaultValue: field.defaultValue,\n        description: field.description,\n        astNode: field.astNode,\n    };\n}\nexports.inputFieldToFieldConfig = inputFieldToFieldConfig;\n//# sourceMappingURL=schemaRecreation.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar backcompatOptions = { commentDescriptions: true };\nfunction typeFromAST(node) {\n    switch (node.kind) {\n        case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(node);\n        case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(node);\n        case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(node);\n        case graphql_1.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(node);\n        case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(node);\n        case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(node);\n        case graphql_1.Kind.DIRECTIVE_DEFINITION:\n            return makeDirective(node);\n        default:\n            return null;\n    }\n}\nexports.default = typeFromAST;\nfunction makeObjectType(node) {\n    return new graphql_1.GraphQLObjectType({\n        name: node.name.value,\n        fields: function () { return makeFields(node.fields); },\n        interfaces: function () {\n            return node.interfaces.map(function (iface) { return createNamedStub(iface.name.value, 'interface'); });\n        },\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeInterfaceType(node) {\n    return new graphql_1.GraphQLInterfaceType({\n        name: node.name.value,\n        fields: function () { return makeFields(node.fields); },\n        description: graphql_1.getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeEnumType(node) {\n    var values = {};\n    node.values.forEach(function (value) {\n        values[value.name.value] = {\n            description: graphql_1.getDescription(value, backcompatOptions),\n        };\n    });\n    return new graphql_1.GraphQLEnumType({\n        name: node.name.value,\n        values: values,\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeUnionType(node) {\n    return new graphql_1.GraphQLUnionType({\n        name: node.name.value,\n        types: function () {\n            return node.types.map(function (type) { return resolveType(type, 'object'); });\n        },\n        description: graphql_1.getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeScalarType(node) {\n    return new graphql_1.GraphQLScalarType({\n        name: node.name.value,\n        description: graphql_1.getDescription(node, backcompatOptions),\n        serialize: function () { return null; },\n        // Note: validation calls the parse functions to determine if a\n        // literal value is correct. Returning null would cause use of custom\n        // scalars to always fail validation. Returning false causes them to\n        // always pass validation.\n        parseValue: function () { return false; },\n        parseLiteral: function () { return false; },\n    });\n}\nfunction makeInputObjectType(node) {\n    return new graphql_1.GraphQLInputObjectType({\n        name: node.name.value,\n        fields: function () { return makeValues(node.fields); },\n        description: graphql_1.getDescription(node, backcompatOptions),\n    });\n}\nfunction makeFields(nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        var deprecatedDirective = node.directives.find(function (directive) {\n            return directive && directive.name && directive.name.value === 'deprecated';\n        });\n        var deprecatedArgument = deprecatedDirective &&\n            deprecatedDirective.arguments &&\n            deprecatedDirective.arguments.find(function (arg) { return arg && arg.name && arg.name.value === 'reason'; });\n        var deprecationReason = deprecatedArgument &&\n            deprecatedArgument.value &&\n            deprecatedArgument.value.value;\n        result[node.name.value] = {\n            type: resolveType(node.type, 'object'),\n            args: makeValues(node.arguments),\n            description: graphql_1.getDescription(node, backcompatOptions),\n            deprecationReason: deprecationReason,\n        };\n    });\n    return result;\n}\nfunction makeValues(nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        var type = resolveType(node.type, 'input');\n        result[node.name.value] = {\n            type: type,\n            defaultValue: graphql_1.valueFromAST(node.defaultValue, type),\n            description: graphql_1.getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction resolveType(node, type) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(resolveType(node.type, type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(resolveType(node.type, type));\n        default:\n            return createNamedStub(node.name.value, type);\n    }\n}\nfunction createNamedStub(name, type) {\n    var constructor;\n    if (type === 'object') {\n        constructor = graphql_1.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql_1.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql_1.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name: name,\n        fields: {\n            __fake: {\n                type: graphql_1.GraphQLString,\n            },\n        },\n    });\n}\nfunction makeDirective(node) {\n    var locations = [];\n    node.locations.forEach(function (location) {\n        if (location.value in graphql_1.DirectiveLocation) {\n            locations.push(location.value);\n        }\n    });\n    return new graphql_1.GraphQLDirective({\n        name: node.name.value,\n        description: node.description ? node.description.value : null,\n        args: makeValues(node.arguments),\n        locations: locations,\n    });\n}\n//# sourceMappingURL=typeFromAST.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar AddArgumentsAsVariablesTransform = /** @class */ (function () {\n    function AddArgumentsAsVariablesTransform(schema, args) {\n        this.schema = schema;\n        this.args = args;\n    }\n    AddArgumentsAsVariablesTransform.prototype.transformRequest = function (originalRequest) {\n        var _a = addVariablesToRootField(this.schema, originalRequest.document, this.args), document = _a.document, newVariables = _a.newVariables;\n        var variables = __assign(__assign({}, originalRequest.variables), newVariables);\n        return {\n            document: document,\n            variables: variables,\n        };\n    };\n    return AddArgumentsAsVariablesTransform;\n}());\nexports.default = AddArgumentsAsVariablesTransform;\nfunction addVariablesToRootField(targetSchema, document, args) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var variableNames = {};\n    var newOperations = operations.map(function (operation) {\n        var existingVariables = operation.variableDefinitions.map(function (variableDefinition) {\n            return variableDefinition.variable.name.value;\n        });\n        var variableCounter = 0;\n        var variables = {};\n        var generateVariableName = function (argName) {\n            var varName;\n            do {\n                varName = \"_v\" + variableCounter + \"_\" + argName;\n                variableCounter++;\n            } while (existingVariables.indexOf(varName) !== -1);\n            return varName;\n        };\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var newSelectionSet = [];\n        operation.selectionSet.selections.forEach(function (selection) {\n            if (selection.kind === graphql_1.Kind.FIELD) {\n                var newArgs_1 = {};\n                selection.arguments.forEach(function (argument) {\n                    newArgs_1[argument.name.value] = argument;\n                });\n                var name_1 = selection.name.value;\n                var field = type.getFields()[name_1];\n                field.args.forEach(function (argument) {\n                    if (argument.name in args) {\n                        var variableName = generateVariableName(argument.name);\n                        variableNames[argument.name] = variableName;\n                        newArgs_1[argument.name] = {\n                            kind: graphql_1.Kind.ARGUMENT,\n                            name: {\n                                kind: graphql_1.Kind.NAME,\n                                value: argument.name,\n                            },\n                            value: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                        };\n                        existingVariables.push(variableName);\n                        variables[variableName] = {\n                            kind: graphql_1.Kind.VARIABLE_DEFINITION,\n                            variable: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                            type: typeToAst(argument.type),\n                        };\n                    }\n                });\n                newSelectionSet.push(__assign(__assign({}, selection), { arguments: Object.keys(newArgs_1).map(function (argName) { return newArgs_1[argName]; }) }));\n            }\n            else {\n                newSelectionSet.push(selection);\n            }\n        });\n        return __assign(__assign({}, operation), { variableDefinitions: operation.variableDefinitions.concat(Object.keys(variables).map(function (varName) { return variables[varName]; })), selectionSet: {\n                kind: graphql_1.Kind.SELECTION_SET,\n                selections: newSelectionSet,\n            } });\n    });\n    var newVariables = {};\n    Object.keys(variableNames).forEach(function (name) {\n        newVariables[variableNames[name]] = args[name];\n    });\n    return {\n        document: __assign(__assign({}, document), { definitions: __spreadArrays(newOperations, fragments) }),\n        newVariables: newVariables,\n    };\n}\nfunction typeToAst(type) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        var innerType = typeToAst(type.ofType);\n        if (innerType.kind === graphql_1.Kind.LIST_TYPE ||\n            innerType.kind === graphql_1.Kind.NAMED_TYPE) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                type: innerType,\n            };\n        }\n        else {\n            throw new Error('Incorrent inner non-null type');\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLList) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: typeToAst(type.ofType),\n        };\n    }\n    else {\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.toString(),\n            },\n        };\n    }\n}\n//# sourceMappingURL=AddArgumentsAsVariables.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar AddTypenameToAbstract = /** @class */ (function () {\n    function AddTypenameToAbstract(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    AddTypenameToAbstract.prototype.transformRequest = function (originalRequest) {\n        var document = addTypenameToAbstract(this.targetSchema, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return AddTypenameToAbstract;\n}());\nexports.default = AddTypenameToAbstract;\nfunction addTypenameToAbstract(targetSchema, document) {\n    var _a;\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            var selections = node.selections;\n            if (parentType &&\n                (parentType instanceof graphql_1.GraphQLInterfaceType ||\n                    parentType instanceof graphql_1.GraphQLUnionType) &&\n                !selections.find(function (_) {\n                    return _.kind === graphql_1.Kind.FIELD &&\n                        _.name.value === '__typename';\n                })) {\n                selections = selections.concat({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (selections !== node.selections) {\n                return __assign(__assign({}, node), { selections: selections });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=AddTypenameToAbstract.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../stitching/errors\");\nvar CheckResultAndHandleErrors = /** @class */ (function () {\n    function CheckResultAndHandleErrors(info, fieldName) {\n        this.info = info;\n        this.fieldName = fieldName;\n    }\n    CheckResultAndHandleErrors.prototype.transformResult = function (result) {\n        return errors_1.checkResultAndHandleErrors(result, this.info, this.fieldName);\n    };\n    return CheckResultAndHandleErrors;\n}());\nexports.default = CheckResultAndHandleErrors;\n//# sourceMappingURL=CheckResultAndHandleErrors.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar ConvertEnumResponse = /** @class */ (function () {\n    function ConvertEnumResponse(enumNode) {\n        this.enumNode = enumNode;\n    }\n    ConvertEnumResponse.prototype.transformResult = function (result) {\n        var value = this.enumNode.getValue(result);\n        if (value) {\n            return value.value;\n        }\n        return result;\n    };\n    return ConvertEnumResponse;\n}());\nexports.default = ConvertEnumResponse;\n//# sourceMappingURL=ConvertEnumResponse.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\n// Transformation used to modifiy `GraphQLEnumType` values in a schema.\nvar ConvertEnumValues = /** @class */ (function () {\n    function ConvertEnumValues(enumValueMap) {\n        this.enumValueMap = enumValueMap;\n    }\n    // Walk a schema looking for `GraphQLEnumType` types. If found, and\n    // matching types have been identified in `this.enumValueMap`, create new\n    // `GraphQLEnumType` types using the `this.enumValueMap` specified new\n    // values, and return them in the new schema.\n    ConvertEnumValues.prototype.transformSchema = function (schema) {\n        var _a;\n        var enumValueMap = this.enumValueMap;\n        if (!enumValueMap || Object.keys(enumValueMap).length === 0) {\n            return schema;\n        }\n        var transformedSchema = visitSchema_1.visitSchema(schema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.ENUM_TYPE] = function (enumType) {\n                var externalToInternalValueMap = enumValueMap[enumType.name];\n                if (externalToInternalValueMap) {\n                    var values = enumType.getValues();\n                    var newValues_1 = {};\n                    values.forEach(function (value) {\n                        var newValue = Object.keys(externalToInternalValueMap).includes(value.name)\n                            ? externalToInternalValueMap[value.name]\n                            : value.name;\n                        newValues_1[value.name] = {\n                            value: newValue,\n                            deprecationReason: value.deprecationReason,\n                            description: value.description,\n                            astNode: value.astNode,\n                        };\n                    });\n                    return new graphql_1.GraphQLEnumType({\n                        name: enumType.name,\n                        description: enumType.description,\n                        astNode: enumType.astNode,\n                        values: newValues_1,\n                    });\n                }\n                return enumType;\n            },\n            _a));\n        return transformedSchema;\n    };\n    return ConvertEnumValues;\n}());\nexports.default = ConvertEnumValues;\n//# sourceMappingURL=ConvertEnumValues.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar implementsAbstractType_1 = require(\"../implementsAbstractType\");\nvar ExpandAbstractTypes = /** @class */ (function () {\n    function ExpandAbstractTypes(transformedSchema, targetSchema) {\n        this.targetSchema = targetSchema;\n        this.mapping = extractPossibleTypes(transformedSchema, targetSchema);\n        this.reverseMapping = flipMapping(this.mapping);\n    }\n    ExpandAbstractTypes.prototype.transformRequest = function (originalRequest) {\n        var document = expandAbstractTypes(this.targetSchema, this.mapping, this.reverseMapping, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ExpandAbstractTypes;\n}());\nexports.default = ExpandAbstractTypes;\nfunction extractPossibleTypes(transformedSchema, targetSchema) {\n    var typeMap = transformedSchema.getTypeMap();\n    var mapping = {};\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (graphql_1.isAbstractType(type)) {\n            var targetType = targetSchema.getType(typeName);\n            if (!graphql_1.isAbstractType(targetType)) {\n                var implementations = transformedSchema.getPossibleTypes(type) || [];\n                mapping[typeName] = implementations\n                    .filter(function (impl) { return targetSchema.getType(impl.name); })\n                    .map(function (impl) { return impl.name; });\n            }\n        }\n    });\n    return mapping;\n}\nfunction flipMapping(mapping) {\n    var result = {};\n    Object.keys(mapping).forEach(function (typeName) {\n        var toTypeNames = mapping[typeName];\n        toTypeNames.forEach(function (toTypeName) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        });\n    });\n    return result;\n}\nfunction expandAbstractTypes(targetSchema, mapping, reverseMapping, document) {\n    var _a;\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var existingFragmentNames = fragments.map(function (fragment) { return fragment.name.value; });\n    var fragmentCounter = 0;\n    var generateFragmentName = function (typeName) {\n        var fragmentName;\n        do {\n            fragmentName = \"_\" + typeName + \"_Fragment\" + fragmentCounter;\n            fragmentCounter++;\n        } while (existingFragmentNames.indexOf(fragmentName) !== -1);\n        return fragmentName;\n    };\n    var newFragments = [];\n    var fragmentReplacements = {};\n    fragments.forEach(function (fragment) {\n        newFragments.push(fragment);\n        var possibleTypes = mapping[fragment.typeCondition.name.value];\n        if (possibleTypes) {\n            fragmentReplacements[fragment.name.value] = [];\n            possibleTypes.forEach(function (possibleTypeName) {\n                var name = generateFragmentName(possibleTypeName);\n                existingFragmentNames.push(name);\n                var newFragment = {\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                };\n                newFragments.push(newFragment);\n                fragmentReplacements[fragment.name.value].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            });\n        }\n    });\n    var newDocument = __assign(__assign({}, document), { definitions: __spreadArrays(operations, newFragments) });\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(newDocument, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var newSelections = __spreadArrays(node.selections);\n            var parentType = graphql_1.getNamedType(typeInfo.getParentType());\n            node.selections.forEach(function (selection) {\n                if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n                    var possibleTypes = mapping[selection.typeCondition.name.value];\n                    if (possibleTypes) {\n                        possibleTypes.forEach(function (possibleType) {\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(possibleType))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                                    typeCondition: {\n                                        kind: graphql_1.Kind.NAMED_TYPE,\n                                        name: {\n                                            kind: graphql_1.Kind.NAME,\n                                            value: possibleType,\n                                        },\n                                    },\n                                    selectionSet: selection.selectionSet,\n                                });\n                            }\n                        });\n                    }\n                }\n                else if (selection.kind === graphql_1.Kind.FRAGMENT_SPREAD) {\n                    var fragmentName = selection.name.value;\n                    var replacements = fragmentReplacements[fragmentName];\n                    if (replacements) {\n                        replacements.forEach(function (replacement) {\n                            var typeName = replacement.typeName;\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(typeName))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.FRAGMENT_SPREAD,\n                                    name: {\n                                        kind: graphql_1.Kind.NAME,\n                                        value: replacement.fragmentName,\n                                    },\n                                });\n                            }\n                        });\n                    }\n                }\n            });\n            if (parentType && reverseMapping[parentType.name]) {\n                newSelections.push({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (newSelections.length !== node.selections.length) {\n                return __assign(__assign({}, node), { selections: newSelections });\n            }\n        },\n        _a)));\n}\n//# sourceMappingURL=ExpandAbstractTypes.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar ExtractField = /** @class */ (function () {\n    function ExtractField(_a) {\n        var from = _a.from, to = _a.to;\n        this.from = from;\n        this.to = to;\n    }\n    ExtractField.prototype.transformRequest = function (originalRequest) {\n        var _a, _b;\n        var fromSelection;\n        var ourPathFrom = JSON.stringify(this.from);\n        var ourPathTo = JSON.stringify(this.to);\n        var fieldPath = [];\n        graphql_1.visit(originalRequest.document, (_a = {},\n            _a[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPathFrom === JSON.stringify(fieldPath)) {\n                        fromSelection = node.selectionSet;\n                        return graphql_1.BREAK;\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                },\n            },\n            _a));\n        fieldPath = [];\n        var newDocument = graphql_1.visit(originalRequest.document, (_b = {},\n            _b[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPathTo === JSON.stringify(fieldPath) && fromSelection) {\n                        return __assign(__assign({}, node), { selectionSet: fromSelection });\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                },\n            },\n            _b));\n        return __assign(__assign({}, originalRequest), { document: newDocument });\n    };\n    return ExtractField;\n}());\nexports.default = ExtractField;\n//# sourceMappingURL=ExtractField.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar TransformRootFields_1 = require(\"./TransformRootFields\");\nvar FilterRootFields = /** @class */ (function () {\n    function FilterRootFields(filter) {\n        this.transformer = new TransformRootFields_1.default(function (operation, fieldName, field) {\n            if (filter(operation, fieldName, field)) {\n                return undefined;\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    FilterRootFields.prototype.transformSchema = function (originalSchema) {\n        return this.transformer.transformSchema(originalSchema);\n    };\n    return FilterRootFields;\n}());\nexports.default = FilterRootFields;\n//# sourceMappingURL=FilterRootFields.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar implementsAbstractType_1 = require(\"../implementsAbstractType\");\nvar FilterToSchema = /** @class */ (function () {\n    function FilterToSchema(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    FilterToSchema.prototype.transformRequest = function (originalRequest) {\n        var document = filterDocumentToSchema(this.targetSchema, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return FilterToSchema;\n}());\nexports.default = FilterToSchema;\nfunction filterDocumentToSchema(targetSchema, document) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var usedFragments = [];\n    var newOperations = [];\n    var newFragments = [];\n    var validFragments = fragments.filter(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        return Boolean(targetSchema.getType(typeName));\n    });\n    var validFragmentsWithType = {};\n    validFragments.forEach(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        var type = targetSchema.getType(typeName);\n        validFragmentsWithType[fragment.name.value] = type;\n    });\n    var fragmentSet = Object.create(null);\n    operations.forEach(function (operation) {\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet), selectionSet = _a.selectionSet, operationUsedFragments = _a.usedFragments, operationUsedVariables = _a.usedVariables;\n        usedFragments = union(usedFragments, operationUsedFragments);\n        var _b = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments), collectedUsedVariables = _b.usedVariables, collectedNewFragments = _b.newFragments, collectedFragmentSet = _b.fragmentSet;\n        var fullUsedVariables = union(operationUsedVariables, collectedUsedVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        var variableDefinitions = operation.variableDefinitions.filter(function (variable) {\n            return fullUsedVariables.indexOf(variable.variable.name.value) !== -1;\n        });\n        newOperations.push({\n            kind: graphql_1.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions: variableDefinitions,\n            selectionSet: selectionSet,\n        });\n    });\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: __spreadArrays(newOperations, newFragments),\n    };\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    var usedVariables = [];\n    var newFragments = [];\n    var _loop_1 = function () {\n        var nextFragmentName = usedFragments.pop();\n        var fragment = validFragments.find(function (fr) { return fr.name.value === nextFragmentName; });\n        if (fragment) {\n            var name_1 = nextFragmentName;\n            var typeName = fragment.typeCondition.name.value;\n            var type = targetSchema.getType(typeName);\n            var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet), selectionSet = _a.selectionSet, fragmentUsedFragments = _a.usedFragments, fragmentUsedVariables = _a.usedVariables;\n            usedFragments = union(usedFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (!fragmentSet[name_1]) {\n                fragmentSet[name_1] = true;\n                newFragments.push({\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name_1,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet: selectionSet,\n                });\n            }\n        }\n    };\n    while (usedFragments.length !== 0) {\n        _loop_1();\n    }\n    return {\n        usedVariables: usedVariables,\n        newFragments: newFragments,\n        fragmentSet: fragmentSet,\n    };\n}\nfunction filterSelectionSet(schema, type, validFragments, selectionSet) {\n    var _a;\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeStack = [type];\n    // Should be rewritten using visitWithSchema\n    var filteredSelectionSet = graphql_1.visit(selectionSet, (_a = {},\n        _a[graphql_1.Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                if (parentType instanceof graphql_1.GraphQLObjectType ||\n                    parentType instanceof graphql_1.GraphQLInterfaceType) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename'\n                        ? graphql_1.TypeNameMetaFieldDef\n                        : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    else {\n                        typeStack.push(field.type);\n                    }\n                    var argNames_1 = (field.args || []).map(function (arg) { return arg.name; });\n                    if (node.arguments) {\n                        var args = node.arguments.filter(function (arg) {\n                            return argNames_1.indexOf(arg.name.value) !== -1;\n                        });\n                        if (args.length !== node.arguments.length) {\n                            return __assign(__assign({}, node), { arguments: args });\n                        }\n                    }\n                }\n                else if (parentType instanceof graphql_1.GraphQLUnionType &&\n                    node.name.value === '__typename') {\n                    typeStack.push(graphql_1.TypeNameMetaFieldDef.type);\n                }\n            },\n            leave: function (node) {\n                var _a;\n                var currentType = typeStack.pop();\n                var resolvedType = resolveType(currentType);\n                if (resolvedType instanceof graphql_1.GraphQLObjectType ||\n                    resolvedType instanceof graphql_1.GraphQLInterfaceType) {\n                    var selections = node.selectionSet && node.selectionSet.selections || null;\n                    if (!selections || selections.length === 0) {\n                        // need to remove any added variables. Is there a better way to do this?\n                        graphql_1.visit(node, (_a = {},\n                            _a[graphql_1.Kind.VARIABLE] = function (variableNode) {\n                                var index = usedVariables.indexOf(variableNode.name.value);\n                                if (index !== -1) {\n                                    usedVariables.splice(index, 1);\n                                }\n                            },\n                            _a));\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[graphql_1.Kind.FRAGMENT_SPREAD] = function (node) {\n            if (node.name.value in validFragments) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                var innerType = validFragments[node.name.value];\n                if (!implementsAbstractType_1.default(schema, parentType, innerType)) {\n                    return null;\n                }\n                else {\n                    usedFragments.push(node.name.value);\n                    return;\n                }\n            }\n            else {\n                return null;\n            }\n        },\n        _a[graphql_1.Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (implementsAbstractType_1.default(schema, parentType, innerType)) {\n                        typeStack.push(innerType);\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            leave: function (node) {\n                typeStack.pop();\n            },\n        },\n        _a[graphql_1.Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n}\nfunction resolveType(type) {\n    var lastType = type;\n    while (lastType instanceof graphql_1.GraphQLNonNull ||\n        lastType instanceof graphql_1.GraphQLList) {\n        lastType = lastType.ofType;\n    }\n    return lastType;\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = {};\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!cache[item]) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=FilterToSchema.js.map","/* tslint:disable:no-unused-expression */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\nvar FilterTypes = /** @class */ (function () {\n    function FilterTypes(filter) {\n        this.filter = filter;\n    }\n    FilterTypes.prototype.transformSchema = function (schema) {\n        var _a;\n        var _this = this;\n        return visitSchema_1.visitSchema(schema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n                if (_this.filter(type)) {\n                    return undefined;\n                }\n                else {\n                    return null;\n                }\n            },\n            _a));\n    };\n    return FilterTypes;\n}());\nexports.default = FilterTypes;\n//# sourceMappingURL=FilterTypes.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar schemaRecreation_1 = require(\"../stitching/schemaRecreation\");\nvar TransformRootFields_1 = require(\"./TransformRootFields\");\nvar RenameRootFields = /** @class */ (function () {\n    function RenameRootFields(renamer) {\n        var resolveType = schemaRecreation_1.createResolveType(function (name, type) { return type; });\n        this.transformer = new TransformRootFields_1.default(function (operation, fieldName, field) {\n            return {\n                name: renamer(operation, fieldName, field),\n                field: schemaRecreation_1.fieldToFieldConfig(field, resolveType, true),\n            };\n        });\n    }\n    RenameRootFields.prototype.transformSchema = function (originalSchema) {\n        return this.transformer.transformSchema(originalSchema);\n    };\n    return RenameRootFields;\n}());\nexports.default = RenameRootFields;\n//# sourceMappingURL=RenameRootFields.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar isSpecifiedScalarType_1 = require(\"../isSpecifiedScalarType\");\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\nvar RenameTypes = /** @class */ (function () {\n    function RenameTypes(renamer, options) {\n        this.renamer = renamer;\n        this.reverseMap = {};\n        var _a = options || {}, _b = _a.renameBuiltins, renameBuiltins = _b === void 0 ? false : _b, _c = _a.renameScalars, renameScalars = _c === void 0 ? true : _c;\n        this.renameBuiltins = renameBuiltins;\n        this.renameScalars = renameScalars;\n    }\n    RenameTypes.prototype.transformSchema = function (originalSchema) {\n        var _a;\n        var _this = this;\n        return visitSchema_1.visitSchema(originalSchema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n                if (isSpecifiedScalarType_1.default(type) && !_this.renameBuiltins) {\n                    return undefined;\n                }\n                if (type instanceof graphql_1.GraphQLScalarType && !_this.renameScalars) {\n                    return undefined;\n                }\n                var newName = _this.renamer(type.name);\n                if (newName && newName !== type.name) {\n                    _this.reverseMap[newName] = type.name;\n                    var newType = Object.assign(Object.create(type), type);\n                    newType.name = newName;\n                    return newType;\n                }\n            },\n            _a[visitSchema_1.VisitSchemaKind.ROOT_OBJECT] = function (type) {\n                return undefined;\n            },\n            _a));\n    };\n    RenameTypes.prototype.transformRequest = function (originalRequest) {\n        var _a;\n        var _this = this;\n        var newDocument = graphql_1.visit(originalRequest.document, (_a = {},\n            _a[graphql_1.Kind.NAMED_TYPE] = function (node) {\n                var name = node.name.value;\n                if (name in _this.reverseMap) {\n                    return __assign(__assign({}, node), { name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: _this.reverseMap[name],\n                        } });\n                }\n            },\n            _a));\n        return {\n            document: newDocument,\n            variables: originalRequest.variables,\n        };\n    };\n    RenameTypes.prototype.transformResult = function (result) {\n        if (result.data) {\n            var data = this.renameTypes(result.data, 'data');\n            if (data !== result.data) {\n                return __assign(__assign({}, result), { data: data });\n            }\n        }\n        return result;\n    };\n    RenameTypes.prototype.renameTypes = function (value, name) {\n        var _this = this;\n        if (name === '__typename') {\n            return this.renamer(value);\n        }\n        if (value && typeof value === 'object') {\n            var newValue_1 = Array.isArray(value) ? []\n                // Create a new object with the same prototype.\n                : Object.create(Object.getPrototypeOf(value));\n            var returnNewValue_1 = false;\n            Object.keys(value).forEach(function (key) {\n                var oldChild = value[key];\n                var newChild = _this.renameTypes(oldChild, key);\n                newValue_1[key] = newChild;\n                if (newChild !== oldChild) {\n                    returnNewValue_1 = true;\n                }\n            });\n            if (returnNewValue_1) {\n                return newValue_1;\n            }\n        }\n        return value;\n    };\n    return RenameTypes;\n}());\nexports.default = RenameTypes;\n//# sourceMappingURL=RenameTypes.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar ReplaceFieldWithFragment = /** @class */ (function () {\n    function ReplaceFieldWithFragment(targetSchema, fragments) {\n        this.targetSchema = targetSchema;\n        this.mapping = {};\n        for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {\n            var _a = fragments_1[_i], field = _a.field, fragment = _a.fragment;\n            var parsedFragment = parseFragmentToInlineFragment(fragment);\n            var actualTypeName = parsedFragment.typeCondition.name.value;\n            this.mapping[actualTypeName] = this.mapping[actualTypeName] || {};\n            if (this.mapping[actualTypeName][field]) {\n                this.mapping[actualTypeName][field].push(parsedFragment);\n            }\n            else {\n                this.mapping[actualTypeName][field] = [parsedFragment];\n            }\n        }\n    }\n    ReplaceFieldWithFragment.prototype.transformRequest = function (originalRequest) {\n        var document = replaceFieldsWithFragments(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ReplaceFieldWithFragment;\n}());\nexports.default = ReplaceFieldWithFragment;\nfunction replaceFieldsWithFragments(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (mapping[parentTypeName_1]) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === graphql_1.Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var fragments = mapping[parentTypeName_1][name_1];\n                            if (fragments && fragments.length > 0) {\n                                var fragment = concatInlineFragments(parentTypeName_1, fragments);\n                                selections_1 = selections_1.concat(fragment);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\nfunction parseFragmentToInlineFragment(definitions) {\n    if (definitions.trim().startsWith('fragment')) {\n        var document_1 = graphql_1.parse(definitions);\n        for (var _i = 0, _a = document_1.definitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            if (definition.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: definition.typeCondition,\n                    selectionSet: definition.selectionSet,\n                };\n            }\n        }\n    }\n    var query = graphql_1.parse(\"{\" + definitions + \"}\")\n        .definitions[0];\n    for (var _b = 0, _c = query.selectionSet.selections; _b < _c.length; _b++) {\n        var selection = _c[_b];\n        if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n            return selection;\n        }\n    }\n    throw new Error('Could not parse fragment');\n}\nfunction concatInlineFragments(type, fragments) {\n    var fragmentSelections = fragments.reduce(function (selections, fragment) {\n        return selections.concat(fragment.selectionSet.selections);\n    }, []);\n    var deduplicatedFragmentSelection = deduplicateSelection(fragmentSelections);\n    return {\n        kind: graphql_1.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type,\n            },\n        },\n        selectionSet: {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: deduplicatedFragmentSelection,\n        },\n    };\n}\nfunction deduplicateSelection(nodes) {\n    var selectionMap = nodes.reduce(function (map, node) {\n        var _a, _b, _c;\n        switch (node.kind) {\n            case 'Field': {\n                if (node.alias) {\n                    if (map.hasOwnProperty(node.alias.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign(__assign({}, map), (_a = {}, _a[node.alias.value] = node, _a));\n                    }\n                }\n                else {\n                    if (map.hasOwnProperty(node.name.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign(__assign({}, map), (_b = {}, _b[node.name.value] = node, _b));\n                    }\n                }\n            }\n            case 'FragmentSpread': {\n                if (map.hasOwnProperty(node.name.value)) {\n                    return map;\n                }\n                else {\n                    return __assign(__assign({}, map), (_c = {}, _c[node.name.value] = node, _c));\n                }\n            }\n            case 'InlineFragment': {\n                if (map.__fragment) {\n                    var fragment = map.__fragment;\n                    return __assign(__assign({}, map), { __fragment: concatInlineFragments(fragment.typeCondition.name.value, [fragment, node]) });\n                }\n                else {\n                    return __assign(__assign({}, map), { __fragment: node });\n                }\n            }\n            default: {\n                return map;\n            }\n        }\n    }, {});\n    var selection = Object.keys(selectionMap).reduce(function (selectionList, node) { return selectionList.concat(selectionMap[node]); }, []);\n    return selection;\n}\n//# sourceMappingURL=ReplaceFieldWithFragment.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar visitSchema_1 = require(\"./visitSchema\");\nvar schemaRecreation_1 = require(\"../stitching/schemaRecreation\");\nvar TransformRootFields = /** @class */ (function () {\n    function TransformRootFields(transform) {\n        this.transform = transform;\n    }\n    TransformRootFields.prototype.transformSchema = function (originalSchema) {\n        var _a;\n        var _this = this;\n        return visitSchema_1.visitSchema(originalSchema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.QUERY] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Query', fieldName, field);\n                });\n            },\n            _a[visitSchema_1.VisitSchemaKind.MUTATION] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Mutation', fieldName, field);\n                });\n            },\n            _a[visitSchema_1.VisitSchemaKind.SUBSCRIPTION] = function (type) {\n                return transformFields(type, function (fieldName, field) {\n                    return _this.transform('Subscription', fieldName, field);\n                });\n            },\n            _a));\n    };\n    return TransformRootFields;\n}());\nexports.default = TransformRootFields;\nfunction transformFields(type, transformer) {\n    var resolveType = schemaRecreation_1.createResolveType(function (name, originalType) {\n        return originalType;\n    });\n    var fields = type.getFields();\n    var newFields = {};\n    Object.keys(fields).forEach(function (fieldName) {\n        var field = fields[fieldName];\n        var newField = transformer(fieldName, field);\n        if (typeof newField === 'undefined') {\n            newFields[fieldName] = schemaRecreation_1.fieldToFieldConfig(field, resolveType, true);\n        }\n        else if (newField !== null) {\n            if (newField.name) {\n                newFields[newField.name] = newField.field;\n            }\n            else {\n                newFields[fieldName] = newField;\n            }\n        }\n    });\n    if (isEmptyObject_1.default(newFields)) {\n        return null;\n    }\n    else {\n        return new graphql_1.GraphQLObjectType({\n            name: type.name,\n            description: type.description,\n            astNode: type.astNode,\n            fields: newFields,\n        });\n    }\n}\n//# sourceMappingURL=TransformRootFields.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar WrapQuery = /** @class */ (function () {\n    function WrapQuery(path, wrapper, extractor) {\n        this.path = path;\n        this.wrapper = wrapper;\n        this.extractor = extractor;\n    }\n    WrapQuery.prototype.transformRequest = function (originalRequest) {\n        var _a;\n        var _this = this;\n        var document = originalRequest.document;\n        var fieldPath = [];\n        var ourPath = JSON.stringify(this.path);\n        var newDocument = graphql_1.visit(document, (_a = {},\n            _a[graphql_1.Kind.FIELD] = {\n                enter: function (node) {\n                    fieldPath.push(node.name.value);\n                    if (ourPath === JSON.stringify(fieldPath)) {\n                        var wrapResult = _this.wrapper(node.selectionSet);\n                        // Selection can be either a single selection or a selection set. If it's just one selection,\n                        // let's wrap it in a selection set. Otherwise, keep it as is.\n                        var selectionSet = wrapResult.kind === graphql_1.Kind.SELECTION_SET\n                            ? wrapResult\n                            : {\n                                kind: graphql_1.Kind.SELECTION_SET,\n                                selections: [wrapResult]\n                            };\n                        return __assign(__assign({}, node), { selectionSet: selectionSet });\n                    }\n                },\n                leave: function (node) {\n                    fieldPath.pop();\n                }\n            },\n            _a));\n        return __assign(__assign({}, originalRequest), { document: newDocument });\n    };\n    WrapQuery.prototype.transformResult = function (originalResult) {\n        var rootData = originalResult.data;\n        if (rootData) {\n            var data = rootData;\n            var path = __spreadArrays(this.path);\n            while (path.length > 1) {\n                var next = path.shift();\n                if (data[next]) {\n                    data = data[next];\n                }\n            }\n            data[path[0]] = this.extractor(data[path[0]]);\n        }\n        return {\n            data: rootData,\n            errors: originalResult.errors\n        };\n    };\n    return WrapQuery;\n}());\nexports.default = WrapQuery;\n//# sourceMappingURL=WrapQuery.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar transformSchema_1 = require(\"./transformSchema\");\nexports.transformSchema = transformSchema_1.default;\nvar AddArgumentsAsVariables_1 = require(\"./AddArgumentsAsVariables\");\nexports.AddArgumentsAsVariables = AddArgumentsAsVariables_1.default;\nvar CheckResultAndHandleErrors_1 = require(\"./CheckResultAndHandleErrors\");\nexports.CheckResultAndHandleErrors = CheckResultAndHandleErrors_1.default;\nvar ReplaceFieldWithFragment_1 = require(\"./ReplaceFieldWithFragment\");\nexports.ReplaceFieldWithFragment = ReplaceFieldWithFragment_1.default;\nvar AddTypenameToAbstract_1 = require(\"./AddTypenameToAbstract\");\nexports.AddTypenameToAbstract = AddTypenameToAbstract_1.default;\nvar FilterToSchema_1 = require(\"./FilterToSchema\");\nexports.FilterToSchema = FilterToSchema_1.default;\nvar RenameTypes_1 = require(\"./RenameTypes\");\nexports.RenameTypes = RenameTypes_1.default;\nvar FilterTypes_1 = require(\"./FilterTypes\");\nexports.FilterTypes = FilterTypes_1.default;\nvar TransformRootFields_1 = require(\"./TransformRootFields\");\nexports.TransformRootFields = TransformRootFields_1.default;\nvar RenameRootFields_1 = require(\"./RenameRootFields\");\nexports.RenameRootFields = RenameRootFields_1.default;\nvar FilterRootFields_1 = require(\"./FilterRootFields\");\nexports.FilterRootFields = FilterRootFields_1.default;\nvar ExpandAbstractTypes_1 = require(\"./ExpandAbstractTypes\");\nexports.ExpandAbstractTypes = ExpandAbstractTypes_1.default;\nvar ExtractField_1 = require(\"./ExtractField\");\nexports.ExtractField = ExtractField_1.default;\nvar WrapQuery_1 = require(\"./WrapQuery\");\nexports.WrapQuery = WrapQuery_1.default;\n//# sourceMappingURL=index.js.map","Object.defineProperty(exports, \"__esModule\", { value: true });\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\nvar transforms_1 = require(\"../transforms/transforms\");\nvar resolvers_1 = require(\"../stitching/resolvers\");\nfunction transformSchema(targetSchema, transforms) {\n    var schema = visitSchema_1.visitSchema(targetSchema, {}, true);\n    var mapping = resolvers_1.generateSimpleMapping(targetSchema);\n    var resolvers = resolvers_1.generateProxyingResolvers(targetSchema, transforms, mapping);\n    schema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n        schema: schema,\n        resolvers: resolvers,\n        resolverValidationOptions: {\n            allowResolversNotInSchema: true,\n        },\n    });\n    schema = transforms_1.applySchemaTransforms(schema, transforms);\n    schema.transforms = transforms;\n    return schema;\n}\nexports.default = transformSchema;\n//# sourceMappingURL=transformSchema.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction applySchemaTransforms(originalSchema, transforms) {\n    return transforms.reduce(function (schema, transform) {\n        return transform.transformSchema ? transform.transformSchema(schema) : schema;\n    }, originalSchema);\n}\nexports.applySchemaTransforms = applySchemaTransforms;\nfunction applyRequestTransforms(originalRequest, transforms) {\n    return transforms.reduce(function (request, transform) {\n        return transform.transformRequest\n            ? transform.transformRequest(request)\n            : request;\n    }, originalRequest);\n}\nexports.applyRequestTransforms = applyRequestTransforms;\nfunction applyResultTransforms(originalResult, transforms) {\n    return transforms.reduce(function (result, transform) {\n        return transform.transformResult ? transform.transformResult(result) : result;\n    }, originalResult);\n}\nexports.applyResultTransforms = applyResultTransforms;\nfunction composeTransforms() {\n    var transforms = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transforms[_i] = arguments[_i];\n    }\n    var reverseTransforms = __spreadArrays(transforms).reverse();\n    return {\n        transformSchema: function (originalSchema) {\n            return applySchemaTransforms(originalSchema, transforms);\n        },\n        transformRequest: function (originalRequest) {\n            return applyRequestTransforms(originalRequest, reverseTransforms);\n        },\n        transformResult: function (result) {\n            return applyResultTransforms(result, reverseTransforms);\n        },\n    };\n}\nexports.composeTransforms = composeTransforms;\n//# sourceMappingURL=transforms.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar schemaRecreation_1 = require(\"../stitching/schemaRecreation\");\nvar VisitSchemaKind;\n(function (VisitSchemaKind) {\n    VisitSchemaKind[\"TYPE\"] = \"VisitSchemaKind.TYPE\";\n    VisitSchemaKind[\"SCALAR_TYPE\"] = \"VisitSchemaKind.SCALAR_TYPE\";\n    VisitSchemaKind[\"ENUM_TYPE\"] = \"VisitSchemaKind.ENUM_TYPE\";\n    VisitSchemaKind[\"COMPOSITE_TYPE\"] = \"VisitSchemaKind.COMPOSITE_TYPE\";\n    VisitSchemaKind[\"OBJECT_TYPE\"] = \"VisitSchemaKind.OBJECT_TYPE\";\n    VisitSchemaKind[\"INPUT_OBJECT_TYPE\"] = \"VisitSchemaKind.INPUT_OBJECT_TYPE\";\n    VisitSchemaKind[\"ABSTRACT_TYPE\"] = \"VisitSchemaKind.ABSTRACT_TYPE\";\n    VisitSchemaKind[\"UNION_TYPE\"] = \"VisitSchemaKind.UNION_TYPE\";\n    VisitSchemaKind[\"INTERFACE_TYPE\"] = \"VisitSchemaKind.INTERFACE_TYPE\";\n    VisitSchemaKind[\"ROOT_OBJECT\"] = \"VisitSchemaKind.ROOT_OBJECT\";\n    VisitSchemaKind[\"QUERY\"] = \"VisitSchemaKind.QUERY\";\n    VisitSchemaKind[\"MUTATION\"] = \"VisitSchemaKind.MUTATION\";\n    VisitSchemaKind[\"SUBSCRIPTION\"] = \"VisitSchemaKind.SUBSCRIPTION\";\n})(VisitSchemaKind = exports.VisitSchemaKind || (exports.VisitSchemaKind = {}));\nfunction visitSchema(schema, visitor, stripResolvers) {\n    var types = {};\n    var resolveType = schemaRecreation_1.createResolveType(function (name) {\n        if (typeof types[name] === 'undefined') {\n            throw new Error(\"Can't find type \" + name + \".\");\n        }\n        return types[name];\n    });\n    var queryType = schema.getQueryType();\n    var mutationType = schema.getMutationType();\n    var subscriptionType = schema.getSubscriptionType();\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).map(function (typeName) {\n        var type = typeMap[typeName];\n        if (graphql_1.isNamedType(type) && graphql_1.getNamedType(type).name.slice(0, 2) !== '__') {\n            var specifiers = getTypeSpecifiers(type, schema);\n            var typeVisitor = getVisitor(visitor, specifiers);\n            if (typeVisitor) {\n                var result = typeVisitor(type, schema);\n                if (typeof result === 'undefined') {\n                    types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n                }\n                else if (result === null) {\n                    types[typeName] = null;\n                }\n                else {\n                    types[typeName] = schemaRecreation_1.recreateType(result, resolveType, !stripResolvers);\n                }\n            }\n            else {\n                types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n            }\n        }\n    });\n    return new graphql_1.GraphQLSchema({\n        query: queryType ? types[queryType.name] : null,\n        mutation: mutationType\n            ? types[mutationType.name]\n            : null,\n        subscription: subscriptionType\n            ? types[subscriptionType.name]\n            : null,\n        types: Object.keys(types).map(function (name) { return types[name]; }),\n    });\n}\nexports.visitSchema = visitSchema;\nfunction getTypeSpecifiers(type, schema) {\n    var specifiers = [VisitSchemaKind.TYPE];\n    if (type instanceof graphql_1.GraphQLObjectType) {\n        specifiers.unshift(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.OBJECT_TYPE);\n        var query = schema.getQueryType();\n        var mutation = schema.getMutationType();\n        var subscription = schema.getSubscriptionType();\n        if (type === query) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.QUERY);\n        }\n        else if (type === mutation) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.MUTATION);\n        }\n        else if (type === subscription) {\n            specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.SUBSCRIPTION);\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLInputObjectType) {\n        specifiers.push(VisitSchemaKind.INPUT_OBJECT_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLInterfaceType) {\n        specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.INTERFACE_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLUnionType) {\n        specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.UNION_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLEnumType) {\n        specifiers.push(VisitSchemaKind.ENUM_TYPE);\n    }\n    else if (type instanceof graphql_1.GraphQLScalarType) {\n        specifiers.push(VisitSchemaKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getVisitor(visitor, specifiers) {\n    var typeVisitor = null;\n    var stack = __spreadArrays(specifiers);\n    while (!typeVisitor && stack.length > 0) {\n        var next = stack.pop();\n        typeVisitor = visitor[next];\n    }\n    return typeVisitor;\n}\n//# sourceMappingURL=visitSchema.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive ^\\\\.\\\\/(context|context\\\\/index)\\\\.(js|ts)$\";","var map = {\n\t\"./resolvers.js\": \"./src/resolvers.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.\\\\/(resolvers|resolvers\\\\/index)\\\\.(js|ts)$\";","var map = {};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.\\\\/(schema|schema\\\\/index)\\\\.(gql|graphql|js|ts)$\";","const resolvers = {\n    Query: {\n      hello: () => 'world!',\n    },\n  };\n   \nexport default resolvers;","module.exports = require(\"@apollographql/graphql-playground-html\");","module.exports = require(\"@wry/equality\");","module.exports = require(\"accepts\");","module.exports = require(\"apollo-server-core\");","module.exports = require(\"babel-loader\");","module.exports = require(\"babel-preset-graphpack\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"cosmiconfig\");","module.exports = require(\"deprecated-decorator\");","module.exports = require(\"events\");","module.exports = require(\"express\");","module.exports = require(\"fast-json-stable-stringify\");","module.exports = require(\"friendly-errors-webpack-plugin\");","module.exports = require(\"fs\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql/error\");","module.exports = require(\"graphql/execution/values\");","module.exports = require(\"graphql/language/visitor\");","module.exports = require(\"graphql/utilities\");","module.exports = require(\"http\");","module.exports = require(\"iterall\");","module.exports = require(\"path\");","module.exports = require(\"ts-invariant\");","module.exports = require(\"tslib\");","module.exports = require(\"type-is\");","module.exports = require(\"url\");","module.exports = require(\"uuid\");","module.exports = require(\"webpack\");","module.exports = require(\"webpack-node-externals\");","module.exports = require(\"zen-observable-ts\");"],"sourceRoot":""}